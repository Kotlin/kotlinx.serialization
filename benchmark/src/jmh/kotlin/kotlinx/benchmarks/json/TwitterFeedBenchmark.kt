package kotlinx.benchmarks.json

import kotlinx.benchmarks.model.*
import kotlinx.serialization.*
import kotlinx.serialization.json.*
import kotlinx.serialization.json.Json.Default.decodeFromString
import kotlinx.serialization.json.Json.Default.encodeToString
import org.openjdk.jmh.annotations.*
import java.util.concurrent.*

@Warmup(iterations = 7, time = 1)
@Measurement(iterations = 7, time = 1)
@BenchmarkMode(Mode.Throughput)
@OutputTimeUnit(TimeUnit.SECONDS)
@State(Scope.Benchmark)
@Fork(2)
open class TwitterFeedBenchmark {

    /*
     * Macro feed benchmark with a lot of UTF-16 used to track general regressions.
     *
     * This is a small piece of twitter feed taken from one of the simdjson repository
     * with Kotlin classes generated by Json2Kotlin plugin (and also manually adjusted)
     */
    private val input = TwitterFeedBenchmark::class.java.getResource("/twitter_macro.json").readBytes().decodeToString()
    private val twitter = Json.decodeFromString(MacroTwitterFeed.serializer(), input)
    private val jsonNoAltNames = Json { useAlternativeNames = false }
    private val jsonIgnoreUnknwn = Json { ignoreUnknownKeys = true }
    private val jsonIgnoreUnknwnNoAltNames = Json { ignoreUnknownKeys = true; useAlternativeNames = false}

    @Setup
    fun init() {
        require(twitter == Json.decodeFromString(MacroTwitterFeed.serializer(), Json.encodeToString(MacroTwitterFeed.serializer(), twitter)))
    }

    // Order of magnitude: ~400 op/s
    @Benchmark
    fun decodeTwitter() = Json.decodeFromString(MacroTwitterFeed.serializer(), input)

    @Benchmark
    fun decodeTwitterNoAltNames() = jsonNoAltNames.decodeFromString(MacroTwitterFeed.serializer(), input)

    @Benchmark
    fun encodeTwitter() = Json.encodeToString(MacroTwitterFeed.serializer(), twitter)

    @Benchmark
    fun decodeMicroTwitter() = jsonIgnoreUnknwn.decodeFromString(MicroTwitterFeed.serializer(), input)

    @Benchmark
    fun decodeMicroTwitterNoAltNames() = jsonIgnoreUnknwnNoAltNames.decodeFromString(MicroTwitterFeed.serializer(), input)

}
