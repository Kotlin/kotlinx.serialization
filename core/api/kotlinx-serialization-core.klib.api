// Klib ABI Dump
// Targets: [androidNativeArm32, androidNativeArm64, androidNativeX64, androidNativeX86, iosArm64, iosSimulatorArm64, iosX64, js, linuxArm32Hfp, linuxArm64, linuxX64, macosArm64, macosX64, mingwX64, tvosArm64, tvosSimulatorArm64, tvosX64, wasmJs, wasmWasi, watchosArm32, watchosArm64, watchosDeviceArm64, watchosSimulatorArm64, watchosX64]
// Alias: native => [androidNativeArm32, androidNativeArm64, androidNativeX64, androidNativeX86, iosArm64, iosSimulatorArm64, iosX64, linuxArm32Hfp, linuxArm64, linuxX64, macosArm64, macosX64, mingwX64, tvosArm64, tvosSimulatorArm64, tvosX64, watchosArm32, watchosArm64, watchosDeviceArm64, watchosSimulatorArm64, watchosX64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <org.jetbrains.kotlinx:kotlinx-serialization-core>
open annotation class kotlinx.serialization.internal/NamedCompanion : kotlin/Annotation { // kotlinx.serialization.internal/NamedCompanion|null[0]
    constructor <init>() // kotlinx.serialization.internal/NamedCompanion.<init>|<init>(){}[0]
}

open annotation class kotlinx.serialization/Contextual : kotlin/Annotation { // kotlinx.serialization/Contextual|null[0]
    constructor <init>() // kotlinx.serialization/Contextual.<init>|<init>(){}[0]
}

open annotation class kotlinx.serialization/EncodeDefault : kotlin/Annotation { // kotlinx.serialization/EncodeDefault|null[0]
    constructor <init>(kotlinx.serialization/EncodeDefault.Mode = ...) // kotlinx.serialization/EncodeDefault.<init>|<init>(kotlinx.serialization.EncodeDefault.Mode){}[0]

    final val mode // kotlinx.serialization/EncodeDefault.mode|{}mode[0]
        final fun <get-mode>(): kotlinx.serialization/EncodeDefault.Mode // kotlinx.serialization/EncodeDefault.mode.<get-mode>|<get-mode>(){}[0]

    final enum class Mode : kotlin/Enum<kotlinx.serialization/EncodeDefault.Mode> { // kotlinx.serialization/EncodeDefault.Mode|null[0]
        enum entry ALWAYS // kotlinx.serialization/EncodeDefault.Mode.ALWAYS|null[0]
        enum entry NEVER // kotlinx.serialization/EncodeDefault.Mode.NEVER|null[0]

        final val entries // kotlinx.serialization/EncodeDefault.Mode.entries|#static{}entries[0]
            final fun <get-entries>(): kotlin.enums/EnumEntries<kotlinx.serialization/EncodeDefault.Mode> // kotlinx.serialization/EncodeDefault.Mode.entries.<get-entries>|<get-entries>#static(){}[0]

        final fun valueOf(kotlin/String): kotlinx.serialization/EncodeDefault.Mode // kotlinx.serialization/EncodeDefault.Mode.valueOf|valueOf#static(kotlin.String){}[0]
        final fun values(): kotlin/Array<kotlinx.serialization/EncodeDefault.Mode> // kotlinx.serialization/EncodeDefault.Mode.values|values#static(){}[0]
    }
}

open annotation class kotlinx.serialization/ExperimentalSerializationApi : kotlin/Annotation { // kotlinx.serialization/ExperimentalSerializationApi|null[0]
    constructor <init>() // kotlinx.serialization/ExperimentalSerializationApi.<init>|<init>(){}[0]
}

open annotation class kotlinx.serialization/InheritableSerialInfo : kotlin/Annotation { // kotlinx.serialization/InheritableSerialInfo|null[0]
    constructor <init>() // kotlinx.serialization/InheritableSerialInfo.<init>|<init>(){}[0]
}

open annotation class kotlinx.serialization/InternalSerializationApi : kotlin/Annotation { // kotlinx.serialization/InternalSerializationApi|null[0]
    constructor <init>() // kotlinx.serialization/InternalSerializationApi.<init>|<init>(){}[0]
}

open annotation class kotlinx.serialization/KeepGeneratedSerializer : kotlin/Annotation { // kotlinx.serialization/KeepGeneratedSerializer|null[0]
    constructor <init>() // kotlinx.serialization/KeepGeneratedSerializer.<init>|<init>(){}[0]
}

open annotation class kotlinx.serialization/MetaSerializable : kotlin/Annotation { // kotlinx.serialization/MetaSerializable|null[0]
    constructor <init>() // kotlinx.serialization/MetaSerializable.<init>|<init>(){}[0]
}

open annotation class kotlinx.serialization/Polymorphic : kotlin/Annotation { // kotlinx.serialization/Polymorphic|null[0]
    constructor <init>() // kotlinx.serialization/Polymorphic.<init>|<init>(){}[0]
}

open annotation class kotlinx.serialization/Required : kotlin/Annotation { // kotlinx.serialization/Required|null[0]
    constructor <init>() // kotlinx.serialization/Required.<init>|<init>(){}[0]
}

open annotation class kotlinx.serialization/SerialInfo : kotlin/Annotation { // kotlinx.serialization/SerialInfo|null[0]
    constructor <init>() // kotlinx.serialization/SerialInfo.<init>|<init>(){}[0]
}

open annotation class kotlinx.serialization/SerialName : kotlin/Annotation { // kotlinx.serialization/SerialName|null[0]
    constructor <init>(kotlin/String) // kotlinx.serialization/SerialName.<init>|<init>(kotlin.String){}[0]

    final val value // kotlinx.serialization/SerialName.value|{}value[0]
        final fun <get-value>(): kotlin/String // kotlinx.serialization/SerialName.value.<get-value>|<get-value>(){}[0]
}

open annotation class kotlinx.serialization/Serializable : kotlin/Annotation { // kotlinx.serialization/Serializable|null[0]
    constructor <init>(kotlin.reflect/KClass<out kotlinx.serialization/KSerializer<*>> = ...) // kotlinx.serialization/Serializable.<init>|<init>(kotlin.reflect.KClass<out|kotlinx.serialization.KSerializer<*>>){}[0]

    final val with // kotlinx.serialization/Serializable.with|{}with[0]
        final fun <get-with>(): kotlin.reflect/KClass<out kotlinx.serialization/KSerializer<*>> // kotlinx.serialization/Serializable.with.<get-with>|<get-with>(){}[0]
}

open annotation class kotlinx.serialization/SerializableWith : kotlin/Annotation { // kotlinx.serialization/SerializableWith|null[0]
    constructor <init>(kotlin.reflect/KClass<out kotlinx.serialization/KSerializer<*>>) // kotlinx.serialization/SerializableWith.<init>|<init>(kotlin.reflect.KClass<out|kotlinx.serialization.KSerializer<*>>){}[0]

    final val serializer // kotlinx.serialization/SerializableWith.serializer|{}serializer[0]
        final fun <get-serializer>(): kotlin.reflect/KClass<out kotlinx.serialization/KSerializer<*>> // kotlinx.serialization/SerializableWith.serializer.<get-serializer>|<get-serializer>(){}[0]
}

open annotation class kotlinx.serialization/Serializer : kotlin/Annotation { // kotlinx.serialization/Serializer|null[0]
    constructor <init>(kotlin.reflect/KClass<*>) // kotlinx.serialization/Serializer.<init>|<init>(kotlin.reflect.KClass<*>){}[0]

    final val forClass // kotlinx.serialization/Serializer.forClass|{}forClass[0]
        final fun <get-forClass>(): kotlin.reflect/KClass<*> // kotlinx.serialization/Serializer.forClass.<get-forClass>|<get-forClass>(){}[0]
}

open annotation class kotlinx.serialization/Transient : kotlin/Annotation { // kotlinx.serialization/Transient|null[0]
    constructor <init>() // kotlinx.serialization/Transient.<init>|<init>(){}[0]
}

open annotation class kotlinx.serialization/UseContextualSerialization : kotlin/Annotation { // kotlinx.serialization/UseContextualSerialization|null[0]
    constructor <init>(kotlin/Array<out kotlin.reflect/KClass<*>>...) // kotlinx.serialization/UseContextualSerialization.<init>|<init>(kotlin.Array<out|kotlin.reflect.KClass<*>>...){}[0]

    final val forClasses // kotlinx.serialization/UseContextualSerialization.forClasses|{}forClasses[0]
        final fun <get-forClasses>(): kotlin/Array<out kotlin.reflect/KClass<*>> // kotlinx.serialization/UseContextualSerialization.forClasses.<get-forClasses>|<get-forClasses>(){}[0]
}

open annotation class kotlinx.serialization/UseSerializers : kotlin/Annotation { // kotlinx.serialization/UseSerializers|null[0]
    constructor <init>(kotlin/Array<out kotlin.reflect/KClass<out kotlinx.serialization/KSerializer<*>>>...) // kotlinx.serialization/UseSerializers.<init>|<init>(kotlin.Array<out|kotlin.reflect.KClass<out|kotlinx.serialization.KSerializer<*>>>...){}[0]

    final val serializerClasses // kotlinx.serialization/UseSerializers.serializerClasses|{}serializerClasses[0]
        final fun <get-serializerClasses>(): kotlin/Array<out kotlin.reflect/KClass<out kotlinx.serialization/KSerializer<*>>> // kotlinx.serialization/UseSerializers.serializerClasses.<get-serializerClasses>|<get-serializerClasses>(){}[0]
}

abstract interface <#A: in kotlin/Any?> kotlinx.serialization/SerializationStrategy { // kotlinx.serialization/SerializationStrategy|null[0]
    abstract val descriptor // kotlinx.serialization/SerializationStrategy.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization/SerializationStrategy.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

    abstract fun serialize(kotlinx.serialization.encoding/Encoder, #A) // kotlinx.serialization/SerializationStrategy.serialize|serialize(kotlinx.serialization.encoding.Encoder;1:0){}[0]
}

abstract interface <#A: kotlin/Any?> kotlinx.serialization.internal/GeneratedSerializer : kotlinx.serialization/KSerializer<#A> { // kotlinx.serialization.internal/GeneratedSerializer|null[0]
    abstract fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // kotlinx.serialization.internal/GeneratedSerializer.childSerializers|childSerializers(){}[0]
    open fun typeParametersSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // kotlinx.serialization.internal/GeneratedSerializer.typeParametersSerializers|typeParametersSerializers(){}[0]
}

abstract interface <#A: kotlin/Any?> kotlinx.serialization/KSerializer : kotlinx.serialization/DeserializationStrategy<#A>, kotlinx.serialization/SerializationStrategy<#A> { // kotlinx.serialization/KSerializer|null[0]
    abstract val descriptor // kotlinx.serialization/KSerializer.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization/KSerializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
}

abstract interface <#A: out kotlin/Any?> kotlinx.serialization/DeserializationStrategy { // kotlinx.serialization/DeserializationStrategy|null[0]
    abstract val descriptor // kotlinx.serialization/DeserializationStrategy.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization/DeserializationStrategy.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

    abstract fun deserialize(kotlinx.serialization.encoding/Decoder): #A // kotlinx.serialization/DeserializationStrategy.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
}

abstract interface kotlinx.serialization.descriptors/SerialDescriptor { // kotlinx.serialization.descriptors/SerialDescriptor|null[0]
    abstract val elementsCount // kotlinx.serialization.descriptors/SerialDescriptor.elementsCount|{}elementsCount[0]
        abstract fun <get-elementsCount>(): kotlin/Int // kotlinx.serialization.descriptors/SerialDescriptor.elementsCount.<get-elementsCount>|<get-elementsCount>(){}[0]
    abstract val kind // kotlinx.serialization.descriptors/SerialDescriptor.kind|{}kind[0]
        abstract fun <get-kind>(): kotlinx.serialization.descriptors/SerialKind // kotlinx.serialization.descriptors/SerialDescriptor.kind.<get-kind>|<get-kind>(){}[0]
    abstract val serialName // kotlinx.serialization.descriptors/SerialDescriptor.serialName|{}serialName[0]
        abstract fun <get-serialName>(): kotlin/String // kotlinx.serialization.descriptors/SerialDescriptor.serialName.<get-serialName>|<get-serialName>(){}[0]
    open val annotations // kotlinx.serialization.descriptors/SerialDescriptor.annotations|{}annotations[0]
        open fun <get-annotations>(): kotlin.collections/List<kotlin/Annotation> // kotlinx.serialization.descriptors/SerialDescriptor.annotations.<get-annotations>|<get-annotations>(){}[0]
    open val isInline // kotlinx.serialization.descriptors/SerialDescriptor.isInline|{}isInline[0]
        open fun <get-isInline>(): kotlin/Boolean // kotlinx.serialization.descriptors/SerialDescriptor.isInline.<get-isInline>|<get-isInline>(){}[0]
    open val isNullable // kotlinx.serialization.descriptors/SerialDescriptor.isNullable|{}isNullable[0]
        open fun <get-isNullable>(): kotlin/Boolean // kotlinx.serialization.descriptors/SerialDescriptor.isNullable.<get-isNullable>|<get-isNullable>(){}[0]

    abstract fun getElementAnnotations(kotlin/Int): kotlin.collections/List<kotlin/Annotation> // kotlinx.serialization.descriptors/SerialDescriptor.getElementAnnotations|getElementAnnotations(kotlin.Int){}[0]
    abstract fun getElementDescriptor(kotlin/Int): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization.descriptors/SerialDescriptor.getElementDescriptor|getElementDescriptor(kotlin.Int){}[0]
    abstract fun getElementIndex(kotlin/String): kotlin/Int // kotlinx.serialization.descriptors/SerialDescriptor.getElementIndex|getElementIndex(kotlin.String){}[0]
    abstract fun getElementName(kotlin/Int): kotlin/String // kotlinx.serialization.descriptors/SerialDescriptor.getElementName|getElementName(kotlin.Int){}[0]
    abstract fun isElementOptional(kotlin/Int): kotlin/Boolean // kotlinx.serialization.descriptors/SerialDescriptor.isElementOptional|isElementOptional(kotlin.Int){}[0]
}

abstract interface kotlinx.serialization.encoding/ChunkedDecoder { // kotlinx.serialization.encoding/ChunkedDecoder|null[0]
    abstract fun decodeStringChunked(kotlin/Function1<kotlin/String, kotlin/Unit>) // kotlinx.serialization.encoding/ChunkedDecoder.decodeStringChunked|decodeStringChunked(kotlin.Function1<kotlin.String,kotlin.Unit>){}[0]
}

abstract interface kotlinx.serialization.encoding/CompositeDecoder { // kotlinx.serialization.encoding/CompositeDecoder|null[0]
    abstract val serializersModule // kotlinx.serialization.encoding/CompositeDecoder.serializersModule|{}serializersModule[0]
        abstract fun <get-serializersModule>(): kotlinx.serialization.modules/SerializersModule // kotlinx.serialization.encoding/CompositeDecoder.serializersModule.<get-serializersModule>|<get-serializersModule>(){}[0]

    abstract fun <#A1: kotlin/Any> decodeNullableSerializableElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int, kotlinx.serialization/DeserializationStrategy<#A1?>, #A1? = ...): #A1? // kotlinx.serialization.encoding/CompositeDecoder.decodeNullableSerializableElement|decodeNullableSerializableElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int;kotlinx.serialization.DeserializationStrategy<0:0?>;0:0?){0§<kotlin.Any>}[0]
    abstract fun <#A1: kotlin/Any?> decodeSerializableElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int, kotlinx.serialization/DeserializationStrategy<#A1>, #A1? = ...): #A1 // kotlinx.serialization.encoding/CompositeDecoder.decodeSerializableElement|decodeSerializableElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int;kotlinx.serialization.DeserializationStrategy<0:0>;0:0?){0§<kotlin.Any?>}[0]
    abstract fun decodeBooleanElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int): kotlin/Boolean // kotlinx.serialization.encoding/CompositeDecoder.decodeBooleanElement|decodeBooleanElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int){}[0]
    abstract fun decodeByteElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int): kotlin/Byte // kotlinx.serialization.encoding/CompositeDecoder.decodeByteElement|decodeByteElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int){}[0]
    abstract fun decodeCharElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int): kotlin/Char // kotlinx.serialization.encoding/CompositeDecoder.decodeCharElement|decodeCharElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int){}[0]
    abstract fun decodeDoubleElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int): kotlin/Double // kotlinx.serialization.encoding/CompositeDecoder.decodeDoubleElement|decodeDoubleElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int){}[0]
    abstract fun decodeElementIndex(kotlinx.serialization.descriptors/SerialDescriptor): kotlin/Int // kotlinx.serialization.encoding/CompositeDecoder.decodeElementIndex|decodeElementIndex(kotlinx.serialization.descriptors.SerialDescriptor){}[0]
    abstract fun decodeFloatElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int): kotlin/Float // kotlinx.serialization.encoding/CompositeDecoder.decodeFloatElement|decodeFloatElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int){}[0]
    abstract fun decodeInlineElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int): kotlinx.serialization.encoding/Decoder // kotlinx.serialization.encoding/CompositeDecoder.decodeInlineElement|decodeInlineElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int){}[0]
    abstract fun decodeIntElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int): kotlin/Int // kotlinx.serialization.encoding/CompositeDecoder.decodeIntElement|decodeIntElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int){}[0]
    abstract fun decodeLongElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int): kotlin/Long // kotlinx.serialization.encoding/CompositeDecoder.decodeLongElement|decodeLongElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int){}[0]
    abstract fun decodeShortElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int): kotlin/Short // kotlinx.serialization.encoding/CompositeDecoder.decodeShortElement|decodeShortElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int){}[0]
    abstract fun decodeStringElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int): kotlin/String // kotlinx.serialization.encoding/CompositeDecoder.decodeStringElement|decodeStringElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int){}[0]
    abstract fun endStructure(kotlinx.serialization.descriptors/SerialDescriptor) // kotlinx.serialization.encoding/CompositeDecoder.endStructure|endStructure(kotlinx.serialization.descriptors.SerialDescriptor){}[0]
    open fun decodeCollectionSize(kotlinx.serialization.descriptors/SerialDescriptor): kotlin/Int // kotlinx.serialization.encoding/CompositeDecoder.decodeCollectionSize|decodeCollectionSize(kotlinx.serialization.descriptors.SerialDescriptor){}[0]
    open fun decodeSequentially(): kotlin/Boolean // kotlinx.serialization.encoding/CompositeDecoder.decodeSequentially|decodeSequentially(){}[0]

    final object Companion { // kotlinx.serialization.encoding/CompositeDecoder.Companion|null[0]
        final const val DECODE_DONE // kotlinx.serialization.encoding/CompositeDecoder.Companion.DECODE_DONE|{}DECODE_DONE[0]
            final fun <get-DECODE_DONE>(): kotlin/Int // kotlinx.serialization.encoding/CompositeDecoder.Companion.DECODE_DONE.<get-DECODE_DONE>|<get-DECODE_DONE>(){}[0]
        final const val UNKNOWN_NAME // kotlinx.serialization.encoding/CompositeDecoder.Companion.UNKNOWN_NAME|{}UNKNOWN_NAME[0]
            final fun <get-UNKNOWN_NAME>(): kotlin/Int // kotlinx.serialization.encoding/CompositeDecoder.Companion.UNKNOWN_NAME.<get-UNKNOWN_NAME>|<get-UNKNOWN_NAME>(){}[0]
    }
}

abstract interface kotlinx.serialization.encoding/CompositeEncoder { // kotlinx.serialization.encoding/CompositeEncoder|null[0]
    abstract val serializersModule // kotlinx.serialization.encoding/CompositeEncoder.serializersModule|{}serializersModule[0]
        abstract fun <get-serializersModule>(): kotlinx.serialization.modules/SerializersModule // kotlinx.serialization.encoding/CompositeEncoder.serializersModule.<get-serializersModule>|<get-serializersModule>(){}[0]

    abstract fun <#A1: kotlin/Any> encodeNullableSerializableElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int, kotlinx.serialization/SerializationStrategy<#A1>, #A1?) // kotlinx.serialization.encoding/CompositeEncoder.encodeNullableSerializableElement|encodeNullableSerializableElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int;kotlinx.serialization.SerializationStrategy<0:0>;0:0?){0§<kotlin.Any>}[0]
    abstract fun <#A1: kotlin/Any?> encodeSerializableElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int, kotlinx.serialization/SerializationStrategy<#A1>, #A1) // kotlinx.serialization.encoding/CompositeEncoder.encodeSerializableElement|encodeSerializableElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int;kotlinx.serialization.SerializationStrategy<0:0>;0:0){0§<kotlin.Any?>}[0]
    abstract fun encodeBooleanElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int, kotlin/Boolean) // kotlinx.serialization.encoding/CompositeEncoder.encodeBooleanElement|encodeBooleanElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int;kotlin.Boolean){}[0]
    abstract fun encodeByteElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int, kotlin/Byte) // kotlinx.serialization.encoding/CompositeEncoder.encodeByteElement|encodeByteElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int;kotlin.Byte){}[0]
    abstract fun encodeCharElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int, kotlin/Char) // kotlinx.serialization.encoding/CompositeEncoder.encodeCharElement|encodeCharElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int;kotlin.Char){}[0]
    abstract fun encodeDoubleElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int, kotlin/Double) // kotlinx.serialization.encoding/CompositeEncoder.encodeDoubleElement|encodeDoubleElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int;kotlin.Double){}[0]
    abstract fun encodeFloatElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int, kotlin/Float) // kotlinx.serialization.encoding/CompositeEncoder.encodeFloatElement|encodeFloatElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int;kotlin.Float){}[0]
    abstract fun encodeInlineElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int): kotlinx.serialization.encoding/Encoder // kotlinx.serialization.encoding/CompositeEncoder.encodeInlineElement|encodeInlineElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int){}[0]
    abstract fun encodeIntElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int, kotlin/Int) // kotlinx.serialization.encoding/CompositeEncoder.encodeIntElement|encodeIntElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int;kotlin.Int){}[0]
    abstract fun encodeLongElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int, kotlin/Long) // kotlinx.serialization.encoding/CompositeEncoder.encodeLongElement|encodeLongElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int;kotlin.Long){}[0]
    abstract fun encodeShortElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int, kotlin/Short) // kotlinx.serialization.encoding/CompositeEncoder.encodeShortElement|encodeShortElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int;kotlin.Short){}[0]
    abstract fun encodeStringElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int, kotlin/String) // kotlinx.serialization.encoding/CompositeEncoder.encodeStringElement|encodeStringElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int;kotlin.String){}[0]
    abstract fun endStructure(kotlinx.serialization.descriptors/SerialDescriptor) // kotlinx.serialization.encoding/CompositeEncoder.endStructure|endStructure(kotlinx.serialization.descriptors.SerialDescriptor){}[0]
    open fun shouldEncodeElementDefault(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int): kotlin/Boolean // kotlinx.serialization.encoding/CompositeEncoder.shouldEncodeElementDefault|shouldEncodeElementDefault(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int){}[0]
}

abstract interface kotlinx.serialization.encoding/Decoder { // kotlinx.serialization.encoding/Decoder|null[0]
    abstract val serializersModule // kotlinx.serialization.encoding/Decoder.serializersModule|{}serializersModule[0]
        abstract fun <get-serializersModule>(): kotlinx.serialization.modules/SerializersModule // kotlinx.serialization.encoding/Decoder.serializersModule.<get-serializersModule>|<get-serializersModule>(){}[0]

    abstract fun beginStructure(kotlinx.serialization.descriptors/SerialDescriptor): kotlinx.serialization.encoding/CompositeDecoder // kotlinx.serialization.encoding/Decoder.beginStructure|beginStructure(kotlinx.serialization.descriptors.SerialDescriptor){}[0]
    abstract fun decodeBoolean(): kotlin/Boolean // kotlinx.serialization.encoding/Decoder.decodeBoolean|decodeBoolean(){}[0]
    abstract fun decodeByte(): kotlin/Byte // kotlinx.serialization.encoding/Decoder.decodeByte|decodeByte(){}[0]
    abstract fun decodeChar(): kotlin/Char // kotlinx.serialization.encoding/Decoder.decodeChar|decodeChar(){}[0]
    abstract fun decodeDouble(): kotlin/Double // kotlinx.serialization.encoding/Decoder.decodeDouble|decodeDouble(){}[0]
    abstract fun decodeEnum(kotlinx.serialization.descriptors/SerialDescriptor): kotlin/Int // kotlinx.serialization.encoding/Decoder.decodeEnum|decodeEnum(kotlinx.serialization.descriptors.SerialDescriptor){}[0]
    abstract fun decodeFloat(): kotlin/Float // kotlinx.serialization.encoding/Decoder.decodeFloat|decodeFloat(){}[0]
    abstract fun decodeInline(kotlinx.serialization.descriptors/SerialDescriptor): kotlinx.serialization.encoding/Decoder // kotlinx.serialization.encoding/Decoder.decodeInline|decodeInline(kotlinx.serialization.descriptors.SerialDescriptor){}[0]
    abstract fun decodeInt(): kotlin/Int // kotlinx.serialization.encoding/Decoder.decodeInt|decodeInt(){}[0]
    abstract fun decodeLong(): kotlin/Long // kotlinx.serialization.encoding/Decoder.decodeLong|decodeLong(){}[0]
    abstract fun decodeNotNullMark(): kotlin/Boolean // kotlinx.serialization.encoding/Decoder.decodeNotNullMark|decodeNotNullMark(){}[0]
    abstract fun decodeNull(): kotlin/Nothing? // kotlinx.serialization.encoding/Decoder.decodeNull|decodeNull(){}[0]
    abstract fun decodeShort(): kotlin/Short // kotlinx.serialization.encoding/Decoder.decodeShort|decodeShort(){}[0]
    abstract fun decodeString(): kotlin/String // kotlinx.serialization.encoding/Decoder.decodeString|decodeString(){}[0]
    open fun <#A1: kotlin/Any> decodeNullableSerializableValue(kotlinx.serialization/DeserializationStrategy<#A1?>): #A1? // kotlinx.serialization.encoding/Decoder.decodeNullableSerializableValue|decodeNullableSerializableValue(kotlinx.serialization.DeserializationStrategy<0:0?>){0§<kotlin.Any>}[0]
    open fun <#A1: kotlin/Any?> decodeSerializableValue(kotlinx.serialization/DeserializationStrategy<#A1>): #A1 // kotlinx.serialization.encoding/Decoder.decodeSerializableValue|decodeSerializableValue(kotlinx.serialization.DeserializationStrategy<0:0>){0§<kotlin.Any?>}[0]
}

abstract interface kotlinx.serialization.encoding/Encoder { // kotlinx.serialization.encoding/Encoder|null[0]
    abstract val serializersModule // kotlinx.serialization.encoding/Encoder.serializersModule|{}serializersModule[0]
        abstract fun <get-serializersModule>(): kotlinx.serialization.modules/SerializersModule // kotlinx.serialization.encoding/Encoder.serializersModule.<get-serializersModule>|<get-serializersModule>(){}[0]

    abstract fun beginStructure(kotlinx.serialization.descriptors/SerialDescriptor): kotlinx.serialization.encoding/CompositeEncoder // kotlinx.serialization.encoding/Encoder.beginStructure|beginStructure(kotlinx.serialization.descriptors.SerialDescriptor){}[0]
    abstract fun encodeBoolean(kotlin/Boolean) // kotlinx.serialization.encoding/Encoder.encodeBoolean|encodeBoolean(kotlin.Boolean){}[0]
    abstract fun encodeByte(kotlin/Byte) // kotlinx.serialization.encoding/Encoder.encodeByte|encodeByte(kotlin.Byte){}[0]
    abstract fun encodeChar(kotlin/Char) // kotlinx.serialization.encoding/Encoder.encodeChar|encodeChar(kotlin.Char){}[0]
    abstract fun encodeDouble(kotlin/Double) // kotlinx.serialization.encoding/Encoder.encodeDouble|encodeDouble(kotlin.Double){}[0]
    abstract fun encodeEnum(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int) // kotlinx.serialization.encoding/Encoder.encodeEnum|encodeEnum(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int){}[0]
    abstract fun encodeFloat(kotlin/Float) // kotlinx.serialization.encoding/Encoder.encodeFloat|encodeFloat(kotlin.Float){}[0]
    abstract fun encodeInline(kotlinx.serialization.descriptors/SerialDescriptor): kotlinx.serialization.encoding/Encoder // kotlinx.serialization.encoding/Encoder.encodeInline|encodeInline(kotlinx.serialization.descriptors.SerialDescriptor){}[0]
    abstract fun encodeInt(kotlin/Int) // kotlinx.serialization.encoding/Encoder.encodeInt|encodeInt(kotlin.Int){}[0]
    abstract fun encodeLong(kotlin/Long) // kotlinx.serialization.encoding/Encoder.encodeLong|encodeLong(kotlin.Long){}[0]
    abstract fun encodeNull() // kotlinx.serialization.encoding/Encoder.encodeNull|encodeNull(){}[0]
    abstract fun encodeShort(kotlin/Short) // kotlinx.serialization.encoding/Encoder.encodeShort|encodeShort(kotlin.Short){}[0]
    abstract fun encodeString(kotlin/String) // kotlinx.serialization.encoding/Encoder.encodeString|encodeString(kotlin.String){}[0]
    open fun <#A1: kotlin/Any> encodeNullableSerializableValue(kotlinx.serialization/SerializationStrategy<#A1>, #A1?) // kotlinx.serialization.encoding/Encoder.encodeNullableSerializableValue|encodeNullableSerializableValue(kotlinx.serialization.SerializationStrategy<0:0>;0:0?){0§<kotlin.Any>}[0]
    open fun <#A1: kotlin/Any?> encodeSerializableValue(kotlinx.serialization/SerializationStrategy<#A1>, #A1) // kotlinx.serialization.encoding/Encoder.encodeSerializableValue|encodeSerializableValue(kotlinx.serialization.SerializationStrategy<0:0>;0:0){0§<kotlin.Any?>}[0]
    open fun beginCollection(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int): kotlinx.serialization.encoding/CompositeEncoder // kotlinx.serialization.encoding/Encoder.beginCollection|beginCollection(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int){}[0]
    open fun encodeNotNullMark() // kotlinx.serialization.encoding/Encoder.encodeNotNullMark|encodeNotNullMark(){}[0]
}

abstract interface kotlinx.serialization.internal/SerializerFactory { // kotlinx.serialization.internal/SerializerFactory|null[0]
    abstract fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // kotlinx.serialization.internal/SerializerFactory.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
}

abstract interface kotlinx.serialization.modules/SerializersModuleCollector { // kotlinx.serialization.modules/SerializersModuleCollector|null[0]
    abstract fun <#A1: kotlin/Any, #B1: #A1> polymorphic(kotlin.reflect/KClass<#A1>, kotlin.reflect/KClass<#B1>, kotlinx.serialization/KSerializer<#B1>) // kotlinx.serialization.modules/SerializersModuleCollector.polymorphic|polymorphic(kotlin.reflect.KClass<0:0>;kotlin.reflect.KClass<0:1>;kotlinx.serialization.KSerializer<0:1>){0§<kotlin.Any>;1§<0:0>}[0]
    abstract fun <#A1: kotlin/Any> contextual(kotlin.reflect/KClass<#A1>, kotlin/Function1<kotlin.collections/List<kotlinx.serialization/KSerializer<*>>, kotlinx.serialization/KSerializer<*>>) // kotlinx.serialization.modules/SerializersModuleCollector.contextual|contextual(kotlin.reflect.KClass<0:0>;kotlin.Function1<kotlin.collections.List<kotlinx.serialization.KSerializer<*>>,kotlinx.serialization.KSerializer<*>>){0§<kotlin.Any>}[0]
    abstract fun <#A1: kotlin/Any> polymorphicDefaultDeserializer(kotlin.reflect/KClass<#A1>, kotlin/Function1<kotlin/String?, kotlinx.serialization/DeserializationStrategy<#A1>?>) // kotlinx.serialization.modules/SerializersModuleCollector.polymorphicDefaultDeserializer|polymorphicDefaultDeserializer(kotlin.reflect.KClass<0:0>;kotlin.Function1<kotlin.String?,kotlinx.serialization.DeserializationStrategy<0:0>?>){0§<kotlin.Any>}[0]
    abstract fun <#A1: kotlin/Any> polymorphicDefaultSerializer(kotlin.reflect/KClass<#A1>, kotlin/Function1<#A1, kotlinx.serialization/SerializationStrategy<#A1>?>) // kotlinx.serialization.modules/SerializersModuleCollector.polymorphicDefaultSerializer|polymorphicDefaultSerializer(kotlin.reflect.KClass<0:0>;kotlin.Function1<0:0,kotlinx.serialization.SerializationStrategy<0:0>?>){0§<kotlin.Any>}[0]
    open fun <#A1: kotlin/Any> contextual(kotlin.reflect/KClass<#A1>, kotlinx.serialization/KSerializer<#A1>) // kotlinx.serialization.modules/SerializersModuleCollector.contextual|contextual(kotlin.reflect.KClass<0:0>;kotlinx.serialization.KSerializer<0:0>){0§<kotlin.Any>}[0]
    open fun <#A1: kotlin/Any> polymorphicDefault(kotlin.reflect/KClass<#A1>, kotlin/Function1<kotlin/String?, kotlinx.serialization/DeserializationStrategy<#A1>?>) // kotlinx.serialization.modules/SerializersModuleCollector.polymorphicDefault|polymorphicDefault(kotlin.reflect.KClass<0:0>;kotlin.Function1<kotlin.String?,kotlinx.serialization.DeserializationStrategy<0:0>?>){0§<kotlin.Any>}[0]
}

abstract interface kotlinx.serialization/BinaryFormat : kotlinx.serialization/SerialFormat { // kotlinx.serialization/BinaryFormat|null[0]
    abstract fun <#A1: kotlin/Any?> decodeFromByteArray(kotlinx.serialization/DeserializationStrategy<#A1>, kotlin/ByteArray): #A1 // kotlinx.serialization/BinaryFormat.decodeFromByteArray|decodeFromByteArray(kotlinx.serialization.DeserializationStrategy<0:0>;kotlin.ByteArray){0§<kotlin.Any?>}[0]
    abstract fun <#A1: kotlin/Any?> encodeToByteArray(kotlinx.serialization/SerializationStrategy<#A1>, #A1): kotlin/ByteArray // kotlinx.serialization/BinaryFormat.encodeToByteArray|encodeToByteArray(kotlinx.serialization.SerializationStrategy<0:0>;0:0){0§<kotlin.Any?>}[0]
}

abstract interface kotlinx.serialization/SerialFormat { // kotlinx.serialization/SerialFormat|null[0]
    abstract val serializersModule // kotlinx.serialization/SerialFormat.serializersModule|{}serializersModule[0]
        abstract fun <get-serializersModule>(): kotlinx.serialization.modules/SerializersModule // kotlinx.serialization/SerialFormat.serializersModule.<get-serializersModule>|<get-serializersModule>(){}[0]
}

abstract interface kotlinx.serialization/StringFormat : kotlinx.serialization/SerialFormat { // kotlinx.serialization/StringFormat|null[0]
    abstract fun <#A1: kotlin/Any?> decodeFromString(kotlinx.serialization/DeserializationStrategy<#A1>, kotlin/String): #A1 // kotlinx.serialization/StringFormat.decodeFromString|decodeFromString(kotlinx.serialization.DeserializationStrategy<0:0>;kotlin.String){0§<kotlin.Any?>}[0]
    abstract fun <#A1: kotlin/Any?> encodeToString(kotlinx.serialization/SerializationStrategy<#A1>, #A1): kotlin/String // kotlinx.serialization/StringFormat.encodeToString|encodeToString(kotlinx.serialization.SerializationStrategy<0:0>;0:0){0§<kotlin.Any?>}[0]
}

abstract class <#A: kotlin/Any> kotlinx.serialization.internal/AbstractPolymorphicSerializer : kotlinx.serialization/KSerializer<#A> { // kotlinx.serialization.internal/AbstractPolymorphicSerializer|null[0]
    abstract val baseClass // kotlinx.serialization.internal/AbstractPolymorphicSerializer.baseClass|{}baseClass[0]
        abstract fun <get-baseClass>(): kotlin.reflect/KClass<#A> // kotlinx.serialization.internal/AbstractPolymorphicSerializer.baseClass.<get-baseClass>|<get-baseClass>(){}[0]

    final fun deserialize(kotlinx.serialization.encoding/Decoder): #A // kotlinx.serialization.internal/AbstractPolymorphicSerializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
    final fun serialize(kotlinx.serialization.encoding/Encoder, #A) // kotlinx.serialization.internal/AbstractPolymorphicSerializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;1:0){}[0]
    open fun findPolymorphicSerializerOrNull(kotlinx.serialization.encoding/CompositeDecoder, kotlin/String?): kotlinx.serialization/DeserializationStrategy<#A>? // kotlinx.serialization.internal/AbstractPolymorphicSerializer.findPolymorphicSerializerOrNull|findPolymorphicSerializerOrNull(kotlinx.serialization.encoding.CompositeDecoder;kotlin.String?){}[0]
    open fun findPolymorphicSerializerOrNull(kotlinx.serialization.encoding/Encoder, #A): kotlinx.serialization/SerializationStrategy<#A>? // kotlinx.serialization.internal/AbstractPolymorphicSerializer.findPolymorphicSerializerOrNull|findPolymorphicSerializerOrNull(kotlinx.serialization.encoding.Encoder;1:0){}[0]
}

abstract class <#A: kotlin/Any?, #B: kotlin.collections/Collection<#A>, #C: kotlin/Any?> kotlinx.serialization.internal/CollectionSerializer : kotlinx.serialization.internal/CollectionLikeSerializer<#A, #B, #C> { // kotlinx.serialization.internal/CollectionSerializer|null[0]
    constructor <init>(kotlinx.serialization/KSerializer<#A>) // kotlinx.serialization.internal/CollectionSerializer.<init>|<init>(kotlinx.serialization.KSerializer<1:0>){}[0]

    open fun (#B).collectionIterator(): kotlin.collections/Iterator<#A> // kotlinx.serialization.internal/CollectionSerializer.collectionIterator|collectionIterator@1:1(){}[0]
    open fun (#B).collectionSize(): kotlin/Int // kotlinx.serialization.internal/CollectionSerializer.collectionSize|collectionSize@1:1(){}[0]
}

abstract class <#A: kotlin/Any?, #B: kotlin/Any?, #C: kotlinx.serialization.internal/PrimitiveArrayBuilder<#B>> kotlinx.serialization.internal/PrimitiveArraySerializer : kotlinx.serialization.internal/CollectionLikeSerializer<#A, #B, #C> { // kotlinx.serialization.internal/PrimitiveArraySerializer|null[0]
    final val descriptor // kotlinx.serialization.internal/PrimitiveArraySerializer.descriptor|{}descriptor[0]
        final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization.internal/PrimitiveArraySerializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

    abstract fun empty(): #B // kotlinx.serialization.internal/PrimitiveArraySerializer.empty|empty(){}[0]
    abstract fun readElement(kotlinx.serialization.encoding/CompositeDecoder, kotlin/Int, #C, kotlin/Boolean) // kotlinx.serialization.internal/PrimitiveArraySerializer.readElement|readElement(kotlinx.serialization.encoding.CompositeDecoder;kotlin.Int;1:2;kotlin.Boolean){}[0]
    abstract fun writeContent(kotlinx.serialization.encoding/CompositeEncoder, #B, kotlin/Int) // kotlinx.serialization.internal/PrimitiveArraySerializer.writeContent|writeContent(kotlinx.serialization.encoding.CompositeEncoder;1:1;kotlin.Int){}[0]
    final fun (#B).collectionIterator(): kotlin.collections/Iterator<#A> // kotlinx.serialization.internal/PrimitiveArraySerializer.collectionIterator|collectionIterator@1:1(){}[0]
    final fun (#C).builderSize(): kotlin/Int // kotlinx.serialization.internal/PrimitiveArraySerializer.builderSize|builderSize@1:2(){}[0]
    final fun (#C).checkCapacity(kotlin/Int) // kotlinx.serialization.internal/PrimitiveArraySerializer.checkCapacity|checkCapacity@1:2(kotlin.Int){}[0]
    final fun (#C).insert(kotlin/Int, #A) // kotlinx.serialization.internal/PrimitiveArraySerializer.insert|insert@1:2(kotlin.Int;1:0){}[0]
    final fun (#C).toResult(): #B // kotlinx.serialization.internal/PrimitiveArraySerializer.toResult|toResult@1:2(){}[0]
    final fun builder(): #C // kotlinx.serialization.internal/PrimitiveArraySerializer.builder|builder(){}[0]
    final fun deserialize(kotlinx.serialization.encoding/Decoder): #B // kotlinx.serialization.internal/PrimitiveArraySerializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
    final fun serialize(kotlinx.serialization.encoding/Encoder, #B) // kotlinx.serialization.internal/PrimitiveArraySerializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;1:1){}[0]
}

abstract class <#A: kotlin/Any?> kotlinx.serialization.internal/PrimitiveArrayBuilder // kotlinx.serialization.internal/PrimitiveArrayBuilder|null[0]

abstract class <#A: kotlin/Any?> kotlinx.serialization.internal/TaggedDecoder : kotlinx.serialization.encoding/CompositeDecoder, kotlinx.serialization.encoding/Decoder { // kotlinx.serialization.internal/TaggedDecoder|null[0]
    constructor <init>() // kotlinx.serialization.internal/TaggedDecoder.<init>|<init>(){}[0]

    final val currentTag // kotlinx.serialization.internal/TaggedDecoder.currentTag|{}currentTag[0]
        final fun <get-currentTag>(): #A // kotlinx.serialization.internal/TaggedDecoder.currentTag.<get-currentTag>|<get-currentTag>(){}[0]
    final val currentTagOrNull // kotlinx.serialization.internal/TaggedDecoder.currentTagOrNull|{}currentTagOrNull[0]
        final fun <get-currentTagOrNull>(): #A? // kotlinx.serialization.internal/TaggedDecoder.currentTagOrNull.<get-currentTagOrNull>|<get-currentTagOrNull>(){}[0]
    open val serializersModule // kotlinx.serialization.internal/TaggedDecoder.serializersModule|{}serializersModule[0]
        open fun <get-serializersModule>(): kotlinx.serialization.modules/SerializersModule // kotlinx.serialization.internal/TaggedDecoder.serializersModule.<get-serializersModule>|<get-serializersModule>(){}[0]

    abstract fun (kotlinx.serialization.descriptors/SerialDescriptor).getTag(kotlin/Int): #A // kotlinx.serialization.internal/TaggedDecoder.getTag|getTag@kotlinx.serialization.descriptors.SerialDescriptor(kotlin.Int){}[0]
    final fun <#A1: kotlin/Any> decodeNullableSerializableElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int, kotlinx.serialization/DeserializationStrategy<#A1?>, #A1?): #A1? // kotlinx.serialization.internal/TaggedDecoder.decodeNullableSerializableElement|decodeNullableSerializableElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int;kotlinx.serialization.DeserializationStrategy<0:0?>;0:0?){0§<kotlin.Any>}[0]
    final fun <#A1: kotlin/Any?> decodeSerializableElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int, kotlinx.serialization/DeserializationStrategy<#A1>, #A1?): #A1 // kotlinx.serialization.internal/TaggedDecoder.decodeSerializableElement|decodeSerializableElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int;kotlinx.serialization.DeserializationStrategy<0:0>;0:0?){0§<kotlin.Any?>}[0]
    final fun copyTagsTo(kotlinx.serialization.internal/TaggedDecoder<#A>) // kotlinx.serialization.internal/TaggedDecoder.copyTagsTo|copyTagsTo(kotlinx.serialization.internal.TaggedDecoder<1:0>){}[0]
    final fun decodeBoolean(): kotlin/Boolean // kotlinx.serialization.internal/TaggedDecoder.decodeBoolean|decodeBoolean(){}[0]
    final fun decodeBooleanElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int): kotlin/Boolean // kotlinx.serialization.internal/TaggedDecoder.decodeBooleanElement|decodeBooleanElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int){}[0]
    final fun decodeByte(): kotlin/Byte // kotlinx.serialization.internal/TaggedDecoder.decodeByte|decodeByte(){}[0]
    final fun decodeByteElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int): kotlin/Byte // kotlinx.serialization.internal/TaggedDecoder.decodeByteElement|decodeByteElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int){}[0]
    final fun decodeChar(): kotlin/Char // kotlinx.serialization.internal/TaggedDecoder.decodeChar|decodeChar(){}[0]
    final fun decodeCharElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int): kotlin/Char // kotlinx.serialization.internal/TaggedDecoder.decodeCharElement|decodeCharElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int){}[0]
    final fun decodeDouble(): kotlin/Double // kotlinx.serialization.internal/TaggedDecoder.decodeDouble|decodeDouble(){}[0]
    final fun decodeDoubleElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int): kotlin/Double // kotlinx.serialization.internal/TaggedDecoder.decodeDoubleElement|decodeDoubleElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int){}[0]
    final fun decodeEnum(kotlinx.serialization.descriptors/SerialDescriptor): kotlin/Int // kotlinx.serialization.internal/TaggedDecoder.decodeEnum|decodeEnum(kotlinx.serialization.descriptors.SerialDescriptor){}[0]
    final fun decodeFloat(): kotlin/Float // kotlinx.serialization.internal/TaggedDecoder.decodeFloat|decodeFloat(){}[0]
    final fun decodeFloatElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int): kotlin/Float // kotlinx.serialization.internal/TaggedDecoder.decodeFloatElement|decodeFloatElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int){}[0]
    final fun decodeInlineElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int): kotlinx.serialization.encoding/Decoder // kotlinx.serialization.internal/TaggedDecoder.decodeInlineElement|decodeInlineElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int){}[0]
    final fun decodeInt(): kotlin/Int // kotlinx.serialization.internal/TaggedDecoder.decodeInt|decodeInt(){}[0]
    final fun decodeIntElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int): kotlin/Int // kotlinx.serialization.internal/TaggedDecoder.decodeIntElement|decodeIntElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int){}[0]
    final fun decodeLong(): kotlin/Long // kotlinx.serialization.internal/TaggedDecoder.decodeLong|decodeLong(){}[0]
    final fun decodeLongElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int): kotlin/Long // kotlinx.serialization.internal/TaggedDecoder.decodeLongElement|decodeLongElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int){}[0]
    final fun decodeNull(): kotlin/Nothing? // kotlinx.serialization.internal/TaggedDecoder.decodeNull|decodeNull(){}[0]
    final fun decodeShort(): kotlin/Short // kotlinx.serialization.internal/TaggedDecoder.decodeShort|decodeShort(){}[0]
    final fun decodeShortElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int): kotlin/Short // kotlinx.serialization.internal/TaggedDecoder.decodeShortElement|decodeShortElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int){}[0]
    final fun decodeString(): kotlin/String // kotlinx.serialization.internal/TaggedDecoder.decodeString|decodeString(){}[0]
    final fun decodeStringElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int): kotlin/String // kotlinx.serialization.internal/TaggedDecoder.decodeStringElement|decodeStringElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int){}[0]
    final fun popTag(): #A // kotlinx.serialization.internal/TaggedDecoder.popTag|popTag(){}[0]
    final fun pushTag(#A) // kotlinx.serialization.internal/TaggedDecoder.pushTag|pushTag(1:0){}[0]
    open fun <#A1: kotlin/Any?> decodeSerializableValue(kotlinx.serialization/DeserializationStrategy<#A1>, #A1?): #A1 // kotlinx.serialization.internal/TaggedDecoder.decodeSerializableValue|decodeSerializableValue(kotlinx.serialization.DeserializationStrategy<0:0>;0:0?){0§<kotlin.Any?>}[0]
    open fun beginStructure(kotlinx.serialization.descriptors/SerialDescriptor): kotlinx.serialization.encoding/CompositeDecoder // kotlinx.serialization.internal/TaggedDecoder.beginStructure|beginStructure(kotlinx.serialization.descriptors.SerialDescriptor){}[0]
    open fun decodeInline(kotlinx.serialization.descriptors/SerialDescriptor): kotlinx.serialization.encoding/Decoder // kotlinx.serialization.internal/TaggedDecoder.decodeInline|decodeInline(kotlinx.serialization.descriptors.SerialDescriptor){}[0]
    open fun decodeNotNullMark(): kotlin/Boolean // kotlinx.serialization.internal/TaggedDecoder.decodeNotNullMark|decodeNotNullMark(){}[0]
    open fun decodeTaggedBoolean(#A): kotlin/Boolean // kotlinx.serialization.internal/TaggedDecoder.decodeTaggedBoolean|decodeTaggedBoolean(1:0){}[0]
    open fun decodeTaggedByte(#A): kotlin/Byte // kotlinx.serialization.internal/TaggedDecoder.decodeTaggedByte|decodeTaggedByte(1:0){}[0]
    open fun decodeTaggedChar(#A): kotlin/Char // kotlinx.serialization.internal/TaggedDecoder.decodeTaggedChar|decodeTaggedChar(1:0){}[0]
    open fun decodeTaggedDouble(#A): kotlin/Double // kotlinx.serialization.internal/TaggedDecoder.decodeTaggedDouble|decodeTaggedDouble(1:0){}[0]
    open fun decodeTaggedEnum(#A, kotlinx.serialization.descriptors/SerialDescriptor): kotlin/Int // kotlinx.serialization.internal/TaggedDecoder.decodeTaggedEnum|decodeTaggedEnum(1:0;kotlinx.serialization.descriptors.SerialDescriptor){}[0]
    open fun decodeTaggedFloat(#A): kotlin/Float // kotlinx.serialization.internal/TaggedDecoder.decodeTaggedFloat|decodeTaggedFloat(1:0){}[0]
    open fun decodeTaggedInline(#A, kotlinx.serialization.descriptors/SerialDescriptor): kotlinx.serialization.encoding/Decoder // kotlinx.serialization.internal/TaggedDecoder.decodeTaggedInline|decodeTaggedInline(1:0;kotlinx.serialization.descriptors.SerialDescriptor){}[0]
    open fun decodeTaggedInt(#A): kotlin/Int // kotlinx.serialization.internal/TaggedDecoder.decodeTaggedInt|decodeTaggedInt(1:0){}[0]
    open fun decodeTaggedLong(#A): kotlin/Long // kotlinx.serialization.internal/TaggedDecoder.decodeTaggedLong|decodeTaggedLong(1:0){}[0]
    open fun decodeTaggedNotNullMark(#A): kotlin/Boolean // kotlinx.serialization.internal/TaggedDecoder.decodeTaggedNotNullMark|decodeTaggedNotNullMark(1:0){}[0]
    open fun decodeTaggedNull(#A): kotlin/Nothing? // kotlinx.serialization.internal/TaggedDecoder.decodeTaggedNull|decodeTaggedNull(1:0){}[0]
    open fun decodeTaggedShort(#A): kotlin/Short // kotlinx.serialization.internal/TaggedDecoder.decodeTaggedShort|decodeTaggedShort(1:0){}[0]
    open fun decodeTaggedString(#A): kotlin/String // kotlinx.serialization.internal/TaggedDecoder.decodeTaggedString|decodeTaggedString(1:0){}[0]
    open fun decodeTaggedValue(#A): kotlin/Any // kotlinx.serialization.internal/TaggedDecoder.decodeTaggedValue|decodeTaggedValue(1:0){}[0]
    open fun endStructure(kotlinx.serialization.descriptors/SerialDescriptor) // kotlinx.serialization.internal/TaggedDecoder.endStructure|endStructure(kotlinx.serialization.descriptors.SerialDescriptor){}[0]
}

abstract class <#A: kotlin/Any?> kotlinx.serialization.internal/TaggedEncoder : kotlinx.serialization.encoding/CompositeEncoder, kotlinx.serialization.encoding/Encoder { // kotlinx.serialization.internal/TaggedEncoder|null[0]
    constructor <init>() // kotlinx.serialization.internal/TaggedEncoder.<init>|<init>(){}[0]

    final val currentTag // kotlinx.serialization.internal/TaggedEncoder.currentTag|{}currentTag[0]
        final fun <get-currentTag>(): #A // kotlinx.serialization.internal/TaggedEncoder.currentTag.<get-currentTag>|<get-currentTag>(){}[0]
    final val currentTagOrNull // kotlinx.serialization.internal/TaggedEncoder.currentTagOrNull|{}currentTagOrNull[0]
        final fun <get-currentTagOrNull>(): #A? // kotlinx.serialization.internal/TaggedEncoder.currentTagOrNull.<get-currentTagOrNull>|<get-currentTagOrNull>(){}[0]
    open val serializersModule // kotlinx.serialization.internal/TaggedEncoder.serializersModule|{}serializersModule[0]
        open fun <get-serializersModule>(): kotlinx.serialization.modules/SerializersModule // kotlinx.serialization.internal/TaggedEncoder.serializersModule.<get-serializersModule>|<get-serializersModule>(){}[0]

    abstract fun (kotlinx.serialization.descriptors/SerialDescriptor).getTag(kotlin/Int): #A // kotlinx.serialization.internal/TaggedEncoder.getTag|getTag@kotlinx.serialization.descriptors.SerialDescriptor(kotlin.Int){}[0]
    final fun encodeBoolean(kotlin/Boolean) // kotlinx.serialization.internal/TaggedEncoder.encodeBoolean|encodeBoolean(kotlin.Boolean){}[0]
    final fun encodeBooleanElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int, kotlin/Boolean) // kotlinx.serialization.internal/TaggedEncoder.encodeBooleanElement|encodeBooleanElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int;kotlin.Boolean){}[0]
    final fun encodeByte(kotlin/Byte) // kotlinx.serialization.internal/TaggedEncoder.encodeByte|encodeByte(kotlin.Byte){}[0]
    final fun encodeByteElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int, kotlin/Byte) // kotlinx.serialization.internal/TaggedEncoder.encodeByteElement|encodeByteElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int;kotlin.Byte){}[0]
    final fun encodeChar(kotlin/Char) // kotlinx.serialization.internal/TaggedEncoder.encodeChar|encodeChar(kotlin.Char){}[0]
    final fun encodeCharElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int, kotlin/Char) // kotlinx.serialization.internal/TaggedEncoder.encodeCharElement|encodeCharElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int;kotlin.Char){}[0]
    final fun encodeDouble(kotlin/Double) // kotlinx.serialization.internal/TaggedEncoder.encodeDouble|encodeDouble(kotlin.Double){}[0]
    final fun encodeDoubleElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int, kotlin/Double) // kotlinx.serialization.internal/TaggedEncoder.encodeDoubleElement|encodeDoubleElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int;kotlin.Double){}[0]
    final fun encodeEnum(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int) // kotlinx.serialization.internal/TaggedEncoder.encodeEnum|encodeEnum(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int){}[0]
    final fun encodeFloat(kotlin/Float) // kotlinx.serialization.internal/TaggedEncoder.encodeFloat|encodeFloat(kotlin.Float){}[0]
    final fun encodeFloatElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int, kotlin/Float) // kotlinx.serialization.internal/TaggedEncoder.encodeFloatElement|encodeFloatElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int;kotlin.Float){}[0]
    final fun encodeInlineElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int): kotlinx.serialization.encoding/Encoder // kotlinx.serialization.internal/TaggedEncoder.encodeInlineElement|encodeInlineElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int){}[0]
    final fun encodeInt(kotlin/Int) // kotlinx.serialization.internal/TaggedEncoder.encodeInt|encodeInt(kotlin.Int){}[0]
    final fun encodeIntElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int, kotlin/Int) // kotlinx.serialization.internal/TaggedEncoder.encodeIntElement|encodeIntElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int;kotlin.Int){}[0]
    final fun encodeLong(kotlin/Long) // kotlinx.serialization.internal/TaggedEncoder.encodeLong|encodeLong(kotlin.Long){}[0]
    final fun encodeLongElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int, kotlin/Long) // kotlinx.serialization.internal/TaggedEncoder.encodeLongElement|encodeLongElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int;kotlin.Long){}[0]
    final fun encodeShort(kotlin/Short) // kotlinx.serialization.internal/TaggedEncoder.encodeShort|encodeShort(kotlin.Short){}[0]
    final fun encodeShortElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int, kotlin/Short) // kotlinx.serialization.internal/TaggedEncoder.encodeShortElement|encodeShortElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int;kotlin.Short){}[0]
    final fun encodeString(kotlin/String) // kotlinx.serialization.internal/TaggedEncoder.encodeString|encodeString(kotlin.String){}[0]
    final fun encodeStringElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int, kotlin/String) // kotlinx.serialization.internal/TaggedEncoder.encodeStringElement|encodeStringElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int;kotlin.String){}[0]
    final fun endStructure(kotlinx.serialization.descriptors/SerialDescriptor) // kotlinx.serialization.internal/TaggedEncoder.endStructure|endStructure(kotlinx.serialization.descriptors.SerialDescriptor){}[0]
    final fun popTag(): #A // kotlinx.serialization.internal/TaggedEncoder.popTag|popTag(){}[0]
    final fun pushTag(#A) // kotlinx.serialization.internal/TaggedEncoder.pushTag|pushTag(1:0){}[0]
    open fun <#A1: kotlin/Any> encodeNullableSerializableElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int, kotlinx.serialization/SerializationStrategy<#A1>, #A1?) // kotlinx.serialization.internal/TaggedEncoder.encodeNullableSerializableElement|encodeNullableSerializableElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int;kotlinx.serialization.SerializationStrategy<0:0>;0:0?){0§<kotlin.Any>}[0]
    open fun <#A1: kotlin/Any?> encodeSerializableElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int, kotlinx.serialization/SerializationStrategy<#A1>, #A1) // kotlinx.serialization.internal/TaggedEncoder.encodeSerializableElement|encodeSerializableElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int;kotlinx.serialization.SerializationStrategy<0:0>;0:0){0§<kotlin.Any?>}[0]
    open fun beginStructure(kotlinx.serialization.descriptors/SerialDescriptor): kotlinx.serialization.encoding/CompositeEncoder // kotlinx.serialization.internal/TaggedEncoder.beginStructure|beginStructure(kotlinx.serialization.descriptors.SerialDescriptor){}[0]
    open fun encodeInline(kotlinx.serialization.descriptors/SerialDescriptor): kotlinx.serialization.encoding/Encoder // kotlinx.serialization.internal/TaggedEncoder.encodeInline|encodeInline(kotlinx.serialization.descriptors.SerialDescriptor){}[0]
    open fun encodeNotNullMark() // kotlinx.serialization.internal/TaggedEncoder.encodeNotNullMark|encodeNotNullMark(){}[0]
    open fun encodeNull() // kotlinx.serialization.internal/TaggedEncoder.encodeNull|encodeNull(){}[0]
    open fun encodeTaggedBoolean(#A, kotlin/Boolean) // kotlinx.serialization.internal/TaggedEncoder.encodeTaggedBoolean|encodeTaggedBoolean(1:0;kotlin.Boolean){}[0]
    open fun encodeTaggedByte(#A, kotlin/Byte) // kotlinx.serialization.internal/TaggedEncoder.encodeTaggedByte|encodeTaggedByte(1:0;kotlin.Byte){}[0]
    open fun encodeTaggedChar(#A, kotlin/Char) // kotlinx.serialization.internal/TaggedEncoder.encodeTaggedChar|encodeTaggedChar(1:0;kotlin.Char){}[0]
    open fun encodeTaggedDouble(#A, kotlin/Double) // kotlinx.serialization.internal/TaggedEncoder.encodeTaggedDouble|encodeTaggedDouble(1:0;kotlin.Double){}[0]
    open fun encodeTaggedEnum(#A, kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int) // kotlinx.serialization.internal/TaggedEncoder.encodeTaggedEnum|encodeTaggedEnum(1:0;kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int){}[0]
    open fun encodeTaggedFloat(#A, kotlin/Float) // kotlinx.serialization.internal/TaggedEncoder.encodeTaggedFloat|encodeTaggedFloat(1:0;kotlin.Float){}[0]
    open fun encodeTaggedInline(#A, kotlinx.serialization.descriptors/SerialDescriptor): kotlinx.serialization.encoding/Encoder // kotlinx.serialization.internal/TaggedEncoder.encodeTaggedInline|encodeTaggedInline(1:0;kotlinx.serialization.descriptors.SerialDescriptor){}[0]
    open fun encodeTaggedInt(#A, kotlin/Int) // kotlinx.serialization.internal/TaggedEncoder.encodeTaggedInt|encodeTaggedInt(1:0;kotlin.Int){}[0]
    open fun encodeTaggedLong(#A, kotlin/Long) // kotlinx.serialization.internal/TaggedEncoder.encodeTaggedLong|encodeTaggedLong(1:0;kotlin.Long){}[0]
    open fun encodeTaggedNonNullMark(#A) // kotlinx.serialization.internal/TaggedEncoder.encodeTaggedNonNullMark|encodeTaggedNonNullMark(1:0){}[0]
    open fun encodeTaggedNull(#A) // kotlinx.serialization.internal/TaggedEncoder.encodeTaggedNull|encodeTaggedNull(1:0){}[0]
    open fun encodeTaggedShort(#A, kotlin/Short) // kotlinx.serialization.internal/TaggedEncoder.encodeTaggedShort|encodeTaggedShort(1:0;kotlin.Short){}[0]
    open fun encodeTaggedString(#A, kotlin/String) // kotlinx.serialization.internal/TaggedEncoder.encodeTaggedString|encodeTaggedString(1:0;kotlin.String){}[0]
    open fun encodeTaggedValue(#A, kotlin/Any) // kotlinx.serialization.internal/TaggedEncoder.encodeTaggedValue|encodeTaggedValue(1:0;kotlin.Any){}[0]
    open fun endEncode(kotlinx.serialization.descriptors/SerialDescriptor) // kotlinx.serialization.internal/TaggedEncoder.endEncode|endEncode(kotlinx.serialization.descriptors.SerialDescriptor){}[0]
}

abstract class kotlinx.serialization.encoding/AbstractDecoder : kotlinx.serialization.encoding/CompositeDecoder, kotlinx.serialization.encoding/Decoder { // kotlinx.serialization.encoding/AbstractDecoder|null[0]
    constructor <init>() // kotlinx.serialization.encoding/AbstractDecoder.<init>|<init>(){}[0]

    final fun <#A1: kotlin/Any> decodeNullableSerializableElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int, kotlinx.serialization/DeserializationStrategy<#A1?>, #A1?): #A1? // kotlinx.serialization.encoding/AbstractDecoder.decodeNullableSerializableElement|decodeNullableSerializableElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int;kotlinx.serialization.DeserializationStrategy<0:0?>;0:0?){0§<kotlin.Any>}[0]
    final fun decodeBooleanElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int): kotlin/Boolean // kotlinx.serialization.encoding/AbstractDecoder.decodeBooleanElement|decodeBooleanElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int){}[0]
    final fun decodeByteElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int): kotlin/Byte // kotlinx.serialization.encoding/AbstractDecoder.decodeByteElement|decodeByteElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int){}[0]
    final fun decodeCharElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int): kotlin/Char // kotlinx.serialization.encoding/AbstractDecoder.decodeCharElement|decodeCharElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int){}[0]
    final fun decodeDoubleElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int): kotlin/Double // kotlinx.serialization.encoding/AbstractDecoder.decodeDoubleElement|decodeDoubleElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int){}[0]
    final fun decodeFloatElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int): kotlin/Float // kotlinx.serialization.encoding/AbstractDecoder.decodeFloatElement|decodeFloatElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int){}[0]
    final fun decodeIntElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int): kotlin/Int // kotlinx.serialization.encoding/AbstractDecoder.decodeIntElement|decodeIntElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int){}[0]
    final fun decodeLongElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int): kotlin/Long // kotlinx.serialization.encoding/AbstractDecoder.decodeLongElement|decodeLongElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int){}[0]
    final fun decodeShortElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int): kotlin/Short // kotlinx.serialization.encoding/AbstractDecoder.decodeShortElement|decodeShortElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int){}[0]
    final fun decodeStringElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int): kotlin/String // kotlinx.serialization.encoding/AbstractDecoder.decodeStringElement|decodeStringElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int){}[0]
    open fun <#A1: kotlin/Any?> decodeSerializableElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int, kotlinx.serialization/DeserializationStrategy<#A1>, #A1?): #A1 // kotlinx.serialization.encoding/AbstractDecoder.decodeSerializableElement|decodeSerializableElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int;kotlinx.serialization.DeserializationStrategy<0:0>;0:0?){0§<kotlin.Any?>}[0]
    open fun <#A1: kotlin/Any?> decodeSerializableValue(kotlinx.serialization/DeserializationStrategy<#A1>, #A1? = ...): #A1 // kotlinx.serialization.encoding/AbstractDecoder.decodeSerializableValue|decodeSerializableValue(kotlinx.serialization.DeserializationStrategy<0:0>;0:0?){0§<kotlin.Any?>}[0]
    open fun beginStructure(kotlinx.serialization.descriptors/SerialDescriptor): kotlinx.serialization.encoding/CompositeDecoder // kotlinx.serialization.encoding/AbstractDecoder.beginStructure|beginStructure(kotlinx.serialization.descriptors.SerialDescriptor){}[0]
    open fun decodeBoolean(): kotlin/Boolean // kotlinx.serialization.encoding/AbstractDecoder.decodeBoolean|decodeBoolean(){}[0]
    open fun decodeByte(): kotlin/Byte // kotlinx.serialization.encoding/AbstractDecoder.decodeByte|decodeByte(){}[0]
    open fun decodeChar(): kotlin/Char // kotlinx.serialization.encoding/AbstractDecoder.decodeChar|decodeChar(){}[0]
    open fun decodeDouble(): kotlin/Double // kotlinx.serialization.encoding/AbstractDecoder.decodeDouble|decodeDouble(){}[0]
    open fun decodeEnum(kotlinx.serialization.descriptors/SerialDescriptor): kotlin/Int // kotlinx.serialization.encoding/AbstractDecoder.decodeEnum|decodeEnum(kotlinx.serialization.descriptors.SerialDescriptor){}[0]
    open fun decodeFloat(): kotlin/Float // kotlinx.serialization.encoding/AbstractDecoder.decodeFloat|decodeFloat(){}[0]
    open fun decodeInline(kotlinx.serialization.descriptors/SerialDescriptor): kotlinx.serialization.encoding/Decoder // kotlinx.serialization.encoding/AbstractDecoder.decodeInline|decodeInline(kotlinx.serialization.descriptors.SerialDescriptor){}[0]
    open fun decodeInlineElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int): kotlinx.serialization.encoding/Decoder // kotlinx.serialization.encoding/AbstractDecoder.decodeInlineElement|decodeInlineElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int){}[0]
    open fun decodeInt(): kotlin/Int // kotlinx.serialization.encoding/AbstractDecoder.decodeInt|decodeInt(){}[0]
    open fun decodeLong(): kotlin/Long // kotlinx.serialization.encoding/AbstractDecoder.decodeLong|decodeLong(){}[0]
    open fun decodeNotNullMark(): kotlin/Boolean // kotlinx.serialization.encoding/AbstractDecoder.decodeNotNullMark|decodeNotNullMark(){}[0]
    open fun decodeNull(): kotlin/Nothing? // kotlinx.serialization.encoding/AbstractDecoder.decodeNull|decodeNull(){}[0]
    open fun decodeShort(): kotlin/Short // kotlinx.serialization.encoding/AbstractDecoder.decodeShort|decodeShort(){}[0]
    open fun decodeString(): kotlin/String // kotlinx.serialization.encoding/AbstractDecoder.decodeString|decodeString(){}[0]
    open fun decodeValue(): kotlin/Any // kotlinx.serialization.encoding/AbstractDecoder.decodeValue|decodeValue(){}[0]
    open fun endStructure(kotlinx.serialization.descriptors/SerialDescriptor) // kotlinx.serialization.encoding/AbstractDecoder.endStructure|endStructure(kotlinx.serialization.descriptors.SerialDescriptor){}[0]
}

abstract class kotlinx.serialization.encoding/AbstractEncoder : kotlinx.serialization.encoding/CompositeEncoder, kotlinx.serialization.encoding/Encoder { // kotlinx.serialization.encoding/AbstractEncoder|null[0]
    constructor <init>() // kotlinx.serialization.encoding/AbstractEncoder.<init>|<init>(){}[0]

    final fun encodeBooleanElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int, kotlin/Boolean) // kotlinx.serialization.encoding/AbstractEncoder.encodeBooleanElement|encodeBooleanElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int;kotlin.Boolean){}[0]
    final fun encodeByteElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int, kotlin/Byte) // kotlinx.serialization.encoding/AbstractEncoder.encodeByteElement|encodeByteElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int;kotlin.Byte){}[0]
    final fun encodeCharElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int, kotlin/Char) // kotlinx.serialization.encoding/AbstractEncoder.encodeCharElement|encodeCharElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int;kotlin.Char){}[0]
    final fun encodeDoubleElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int, kotlin/Double) // kotlinx.serialization.encoding/AbstractEncoder.encodeDoubleElement|encodeDoubleElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int;kotlin.Double){}[0]
    final fun encodeFloatElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int, kotlin/Float) // kotlinx.serialization.encoding/AbstractEncoder.encodeFloatElement|encodeFloatElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int;kotlin.Float){}[0]
    final fun encodeInlineElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int): kotlinx.serialization.encoding/Encoder // kotlinx.serialization.encoding/AbstractEncoder.encodeInlineElement|encodeInlineElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int){}[0]
    final fun encodeIntElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int, kotlin/Int) // kotlinx.serialization.encoding/AbstractEncoder.encodeIntElement|encodeIntElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int;kotlin.Int){}[0]
    final fun encodeLongElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int, kotlin/Long) // kotlinx.serialization.encoding/AbstractEncoder.encodeLongElement|encodeLongElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int;kotlin.Long){}[0]
    final fun encodeShortElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int, kotlin/Short) // kotlinx.serialization.encoding/AbstractEncoder.encodeShortElement|encodeShortElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int;kotlin.Short){}[0]
    final fun encodeStringElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int, kotlin/String) // kotlinx.serialization.encoding/AbstractEncoder.encodeStringElement|encodeStringElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int;kotlin.String){}[0]
    open fun <#A1: kotlin/Any> encodeNullableSerializableElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int, kotlinx.serialization/SerializationStrategy<#A1>, #A1?) // kotlinx.serialization.encoding/AbstractEncoder.encodeNullableSerializableElement|encodeNullableSerializableElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int;kotlinx.serialization.SerializationStrategy<0:0>;0:0?){0§<kotlin.Any>}[0]
    open fun <#A1: kotlin/Any?> encodeSerializableElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int, kotlinx.serialization/SerializationStrategy<#A1>, #A1) // kotlinx.serialization.encoding/AbstractEncoder.encodeSerializableElement|encodeSerializableElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int;kotlinx.serialization.SerializationStrategy<0:0>;0:0){0§<kotlin.Any?>}[0]
    open fun beginStructure(kotlinx.serialization.descriptors/SerialDescriptor): kotlinx.serialization.encoding/CompositeEncoder // kotlinx.serialization.encoding/AbstractEncoder.beginStructure|beginStructure(kotlinx.serialization.descriptors.SerialDescriptor){}[0]
    open fun encodeBoolean(kotlin/Boolean) // kotlinx.serialization.encoding/AbstractEncoder.encodeBoolean|encodeBoolean(kotlin.Boolean){}[0]
    open fun encodeByte(kotlin/Byte) // kotlinx.serialization.encoding/AbstractEncoder.encodeByte|encodeByte(kotlin.Byte){}[0]
    open fun encodeChar(kotlin/Char) // kotlinx.serialization.encoding/AbstractEncoder.encodeChar|encodeChar(kotlin.Char){}[0]
    open fun encodeDouble(kotlin/Double) // kotlinx.serialization.encoding/AbstractEncoder.encodeDouble|encodeDouble(kotlin.Double){}[0]
    open fun encodeElement(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int): kotlin/Boolean // kotlinx.serialization.encoding/AbstractEncoder.encodeElement|encodeElement(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int){}[0]
    open fun encodeEnum(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int) // kotlinx.serialization.encoding/AbstractEncoder.encodeEnum|encodeEnum(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int){}[0]
    open fun encodeFloat(kotlin/Float) // kotlinx.serialization.encoding/AbstractEncoder.encodeFloat|encodeFloat(kotlin.Float){}[0]
    open fun encodeInline(kotlinx.serialization.descriptors/SerialDescriptor): kotlinx.serialization.encoding/Encoder // kotlinx.serialization.encoding/AbstractEncoder.encodeInline|encodeInline(kotlinx.serialization.descriptors.SerialDescriptor){}[0]
    open fun encodeInt(kotlin/Int) // kotlinx.serialization.encoding/AbstractEncoder.encodeInt|encodeInt(kotlin.Int){}[0]
    open fun encodeLong(kotlin/Long) // kotlinx.serialization.encoding/AbstractEncoder.encodeLong|encodeLong(kotlin.Long){}[0]
    open fun encodeNull() // kotlinx.serialization.encoding/AbstractEncoder.encodeNull|encodeNull(){}[0]
    open fun encodeShort(kotlin/Short) // kotlinx.serialization.encoding/AbstractEncoder.encodeShort|encodeShort(kotlin.Short){}[0]
    open fun encodeString(kotlin/String) // kotlinx.serialization.encoding/AbstractEncoder.encodeString|encodeString(kotlin.String){}[0]
    open fun encodeValue(kotlin/Any) // kotlinx.serialization.encoding/AbstractEncoder.encodeValue|encodeValue(kotlin.Any){}[0]
    open fun endStructure(kotlinx.serialization.descriptors/SerialDescriptor) // kotlinx.serialization.encoding/AbstractEncoder.endStructure|endStructure(kotlinx.serialization.descriptors.SerialDescriptor){}[0]
}

abstract class kotlinx.serialization.internal/NamedValueDecoder : kotlinx.serialization.internal/TaggedDecoder<kotlin/String> { // kotlinx.serialization.internal/NamedValueDecoder|null[0]
    constructor <init>() // kotlinx.serialization.internal/NamedValueDecoder.<init>|<init>(){}[0]

    final fun (kotlinx.serialization.descriptors/SerialDescriptor).getTag(kotlin/Int): kotlin/String // kotlinx.serialization.internal/NamedValueDecoder.getTag|getTag@kotlinx.serialization.descriptors.SerialDescriptor(kotlin.Int){}[0]
    final fun nested(kotlin/String): kotlin/String // kotlinx.serialization.internal/NamedValueDecoder.nested|nested(kotlin.String){}[0]
    final fun renderTagStack(): kotlin/String // kotlinx.serialization.internal/NamedValueDecoder.renderTagStack|renderTagStack(){}[0]
    open fun composeName(kotlin/String, kotlin/String): kotlin/String // kotlinx.serialization.internal/NamedValueDecoder.composeName|composeName(kotlin.String;kotlin.String){}[0]
    open fun elementName(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int): kotlin/String // kotlinx.serialization.internal/NamedValueDecoder.elementName|elementName(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int){}[0]
}

abstract class kotlinx.serialization.internal/NamedValueEncoder : kotlinx.serialization.internal/TaggedEncoder<kotlin/String> { // kotlinx.serialization.internal/NamedValueEncoder|null[0]
    constructor <init>() // kotlinx.serialization.internal/NamedValueEncoder.<init>|<init>(){}[0]

    final fun (kotlinx.serialization.descriptors/SerialDescriptor).getTag(kotlin/Int): kotlin/String // kotlinx.serialization.internal/NamedValueEncoder.getTag|getTag@kotlinx.serialization.descriptors.SerialDescriptor(kotlin.Int){}[0]
    final fun nested(kotlin/String): kotlin/String // kotlinx.serialization.internal/NamedValueEncoder.nested|nested(kotlin.String){}[0]
    open fun composeName(kotlin/String, kotlin/String): kotlin/String // kotlinx.serialization.internal/NamedValueEncoder.composeName|composeName(kotlin.String;kotlin.String){}[0]
    open fun elementName(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int): kotlin/String // kotlinx.serialization.internal/NamedValueEncoder.elementName|elementName(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int){}[0]
}

final class <#A: in kotlin/Any> kotlinx.serialization.modules/PolymorphicModuleBuilder { // kotlinx.serialization.modules/PolymorphicModuleBuilder|null[0]
    constructor <init>(kotlin.reflect/KClass<#A>, kotlinx.serialization/KSerializer<#A>? = ...) // kotlinx.serialization.modules/PolymorphicModuleBuilder.<init>|<init>(kotlin.reflect.KClass<1:0>;kotlinx.serialization.KSerializer<1:0>?){}[0]

    final fun <#A1: #A> subclass(kotlin.reflect/KClass<#A1>, kotlinx.serialization/KSerializer<#A1>) // kotlinx.serialization.modules/PolymorphicModuleBuilder.subclass|subclass(kotlin.reflect.KClass<0:0>;kotlinx.serialization.KSerializer<0:0>){0§<1:0>}[0]
    final fun buildTo(kotlinx.serialization.modules/SerializersModuleBuilder) // kotlinx.serialization.modules/PolymorphicModuleBuilder.buildTo|buildTo(kotlinx.serialization.modules.SerializersModuleBuilder){}[0]
    final fun default(kotlin/Function1<kotlin/String?, kotlinx.serialization/DeserializationStrategy<#A>?>) // kotlinx.serialization.modules/PolymorphicModuleBuilder.default|default(kotlin.Function1<kotlin.String?,kotlinx.serialization.DeserializationStrategy<1:0>?>){}[0]
    final fun defaultDeserializer(kotlin/Function1<kotlin/String?, kotlinx.serialization/DeserializationStrategy<#A>?>) // kotlinx.serialization.modules/PolymorphicModuleBuilder.defaultDeserializer|defaultDeserializer(kotlin.Function1<kotlin.String?,kotlinx.serialization.DeserializationStrategy<1:0>?>){}[0]
}

final class <#A: kotlin/Any, #B: #A?> kotlinx.serialization.internal/ReferenceArraySerializer : kotlinx.serialization.internal/CollectionLikeSerializer<#B, kotlin/Array<#B>, kotlin.collections/ArrayList<#B>> { // kotlinx.serialization.internal/ReferenceArraySerializer|null[0]
    constructor <init>(kotlin.reflect/KClass<#A>, kotlinx.serialization/KSerializer<#B>) // kotlinx.serialization.internal/ReferenceArraySerializer.<init>|<init>(kotlin.reflect.KClass<1:0>;kotlinx.serialization.KSerializer<1:1>){}[0]

    final val descriptor // kotlinx.serialization.internal/ReferenceArraySerializer.descriptor|{}descriptor[0]
        final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization.internal/ReferenceArraySerializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
}

final class <#A: kotlin/Any> kotlinx.serialization.internal/NullableSerializer : kotlinx.serialization/KSerializer<#A?> { // kotlinx.serialization.internal/NullableSerializer|null[0]
    constructor <init>(kotlinx.serialization/KSerializer<#A>) // kotlinx.serialization.internal/NullableSerializer.<init>|<init>(kotlinx.serialization.KSerializer<1:0>){}[0]

    final val descriptor // kotlinx.serialization.internal/NullableSerializer.descriptor|{}descriptor[0]
        final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization.internal/NullableSerializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

    final fun deserialize(kotlinx.serialization.encoding/Decoder): #A? // kotlinx.serialization.internal/NullableSerializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // kotlinx.serialization.internal/NullableSerializer.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // kotlinx.serialization.internal/NullableSerializer.hashCode|hashCode(){}[0]
    final fun serialize(kotlinx.serialization.encoding/Encoder, #A?) // kotlinx.serialization.internal/NullableSerializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;1:0?){}[0]
}

final class <#A: kotlin/Any> kotlinx.serialization.internal/ObjectSerializer : kotlinx.serialization/KSerializer<#A> { // kotlinx.serialization.internal/ObjectSerializer|null[0]
    constructor <init>(kotlin/String, #A) // kotlinx.serialization.internal/ObjectSerializer.<init>|<init>(kotlin.String;1:0){}[0]
    constructor <init>(kotlin/String, #A, kotlin/Array<kotlin/Annotation>) // kotlinx.serialization.internal/ObjectSerializer.<init>|<init>(kotlin.String;1:0;kotlin.Array<kotlin.Annotation>){}[0]

    final val descriptor // kotlinx.serialization.internal/ObjectSerializer.descriptor|{}descriptor[0]
        final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization.internal/ObjectSerializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

    final fun deserialize(kotlinx.serialization.encoding/Decoder): #A // kotlinx.serialization.internal/ObjectSerializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
    final fun serialize(kotlinx.serialization.encoding/Encoder, #A) // kotlinx.serialization.internal/ObjectSerializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;1:0){}[0]
}

final class <#A: kotlin/Any> kotlinx.serialization/ContextualSerializer : kotlinx.serialization/KSerializer<#A> { // kotlinx.serialization/ContextualSerializer|null[0]
    constructor <init>(kotlin.reflect/KClass<#A>) // kotlinx.serialization/ContextualSerializer.<init>|<init>(kotlin.reflect.KClass<1:0>){}[0]
    constructor <init>(kotlin.reflect/KClass<#A>, kotlinx.serialization/KSerializer<#A>?, kotlin/Array<kotlinx.serialization/KSerializer<*>>) // kotlinx.serialization/ContextualSerializer.<init>|<init>(kotlin.reflect.KClass<1:0>;kotlinx.serialization.KSerializer<1:0>?;kotlin.Array<kotlinx.serialization.KSerializer<*>>){}[0]

    final val descriptor // kotlinx.serialization/ContextualSerializer.descriptor|{}descriptor[0]
        final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization/ContextualSerializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

    final fun deserialize(kotlinx.serialization.encoding/Decoder): #A // kotlinx.serialization/ContextualSerializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
    final fun serialize(kotlinx.serialization.encoding/Encoder, #A) // kotlinx.serialization/ContextualSerializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;1:0){}[0]
}

final class <#A: kotlin/Any> kotlinx.serialization/PolymorphicSerializer : kotlinx.serialization.internal/AbstractPolymorphicSerializer<#A> { // kotlinx.serialization/PolymorphicSerializer|null[0]
    constructor <init>(kotlin.reflect/KClass<#A>) // kotlinx.serialization/PolymorphicSerializer.<init>|<init>(kotlin.reflect.KClass<1:0>){}[0]
    constructor <init>(kotlin.reflect/KClass<#A>, kotlin/Array<kotlin/Annotation>) // kotlinx.serialization/PolymorphicSerializer.<init>|<init>(kotlin.reflect.KClass<1:0>;kotlin.Array<kotlin.Annotation>){}[0]

    final val baseClass // kotlinx.serialization/PolymorphicSerializer.baseClass|{}baseClass[0]
        final fun <get-baseClass>(): kotlin.reflect/KClass<#A> // kotlinx.serialization/PolymorphicSerializer.baseClass.<get-baseClass>|<get-baseClass>(){}[0]
    final val descriptor // kotlinx.serialization/PolymorphicSerializer.descriptor|{}descriptor[0]
        final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization/PolymorphicSerializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

    final fun toString(): kotlin/String // kotlinx.serialization/PolymorphicSerializer.toString|toString(){}[0]
}

final class <#A: kotlin/Any> kotlinx.serialization/SealedClassSerializer : kotlinx.serialization.internal/AbstractPolymorphicSerializer<#A> { // kotlinx.serialization/SealedClassSerializer|null[0]
    constructor <init>(kotlin/String, kotlin.reflect/KClass<#A>, kotlin/Array<kotlin.reflect/KClass<out #A>>, kotlin/Array<kotlinx.serialization/KSerializer<out #A>>) // kotlinx.serialization/SealedClassSerializer.<init>|<init>(kotlin.String;kotlin.reflect.KClass<1:0>;kotlin.Array<kotlin.reflect.KClass<out|1:0>>;kotlin.Array<kotlinx.serialization.KSerializer<out|1:0>>){}[0]
    constructor <init>(kotlin/String, kotlin.reflect/KClass<#A>, kotlin/Array<kotlin.reflect/KClass<out #A>>, kotlin/Array<kotlinx.serialization/KSerializer<out #A>>, kotlin/Array<kotlin/Annotation>) // kotlinx.serialization/SealedClassSerializer.<init>|<init>(kotlin.String;kotlin.reflect.KClass<1:0>;kotlin.Array<kotlin.reflect.KClass<out|1:0>>;kotlin.Array<kotlinx.serialization.KSerializer<out|1:0>>;kotlin.Array<kotlin.Annotation>){}[0]

    final val baseClass // kotlinx.serialization/SealedClassSerializer.baseClass|{}baseClass[0]
        final fun <get-baseClass>(): kotlin.reflect/KClass<#A> // kotlinx.serialization/SealedClassSerializer.baseClass.<get-baseClass>|<get-baseClass>(){}[0]
    final val descriptor // kotlinx.serialization/SealedClassSerializer.descriptor|{}descriptor[0]
        final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization/SealedClassSerializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

    final fun findPolymorphicSerializerOrNull(kotlinx.serialization.encoding/CompositeDecoder, kotlin/String?): kotlinx.serialization/DeserializationStrategy<#A>? // kotlinx.serialization/SealedClassSerializer.findPolymorphicSerializerOrNull|findPolymorphicSerializerOrNull(kotlinx.serialization.encoding.CompositeDecoder;kotlin.String?){}[0]
    final fun findPolymorphicSerializerOrNull(kotlinx.serialization.encoding/Encoder, #A): kotlinx.serialization/SerializationStrategy<#A>? // kotlinx.serialization/SealedClassSerializer.findPolymorphicSerializerOrNull|findPolymorphicSerializerOrNull(kotlinx.serialization.encoding.Encoder;1:0){}[0]
}

final class <#A: kotlin/Any?, #B: kotlin/Any?, #C: kotlin/Any?> kotlinx.serialization.internal/TripleSerializer : kotlinx.serialization/KSerializer<kotlin/Triple<#A, #B, #C>> { // kotlinx.serialization.internal/TripleSerializer|null[0]
    constructor <init>(kotlinx.serialization/KSerializer<#A>, kotlinx.serialization/KSerializer<#B>, kotlinx.serialization/KSerializer<#C>) // kotlinx.serialization.internal/TripleSerializer.<init>|<init>(kotlinx.serialization.KSerializer<1:0>;kotlinx.serialization.KSerializer<1:1>;kotlinx.serialization.KSerializer<1:2>){}[0]

    final val descriptor // kotlinx.serialization.internal/TripleSerializer.descriptor|{}descriptor[0]
        final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization.internal/TripleSerializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

    final fun deserialize(kotlinx.serialization.encoding/Decoder): kotlin/Triple<#A, #B, #C> // kotlinx.serialization.internal/TripleSerializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
    final fun serialize(kotlinx.serialization.encoding/Encoder, kotlin/Triple<#A, #B, #C>) // kotlinx.serialization.internal/TripleSerializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;kotlin.Triple<1:0,1:1,1:2>){}[0]
}

final class <#A: kotlin/Any?, #B: kotlin/Any?> kotlinx.serialization.internal/HashMapSerializer : kotlinx.serialization.internal/MapLikeSerializer<#A, #B, kotlin.collections/Map<#A, #B>, kotlin.collections/HashMap<#A, #B>> { // kotlinx.serialization.internal/HashMapSerializer|null[0]
    constructor <init>(kotlinx.serialization/KSerializer<#A>, kotlinx.serialization/KSerializer<#B>) // kotlinx.serialization.internal/HashMapSerializer.<init>|<init>(kotlinx.serialization.KSerializer<1:0>;kotlinx.serialization.KSerializer<1:1>){}[0]

    final val descriptor // kotlinx.serialization.internal/HashMapSerializer.descriptor|{}descriptor[0]
        final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization.internal/HashMapSerializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
}

final class <#A: kotlin/Any?, #B: kotlin/Any?> kotlinx.serialization.internal/MapEntrySerializer : kotlinx.serialization.internal/KeyValueSerializer<#A, #B, kotlin.collections/Map.Entry<#A, #B>> { // kotlinx.serialization.internal/MapEntrySerializer|null[0]
    constructor <init>(kotlinx.serialization/KSerializer<#A>, kotlinx.serialization/KSerializer<#B>) // kotlinx.serialization.internal/MapEntrySerializer.<init>|<init>(kotlinx.serialization.KSerializer<1:0>;kotlinx.serialization.KSerializer<1:1>){}[0]

    final val descriptor // kotlinx.serialization.internal/MapEntrySerializer.descriptor|{}descriptor[0]
        final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization.internal/MapEntrySerializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
}

final class <#A: kotlin/Any?, #B: kotlin/Any?> kotlinx.serialization.internal/PairSerializer : kotlinx.serialization.internal/KeyValueSerializer<#A, #B, kotlin/Pair<#A, #B>> { // kotlinx.serialization.internal/PairSerializer|null[0]
    constructor <init>(kotlinx.serialization/KSerializer<#A>, kotlinx.serialization/KSerializer<#B>) // kotlinx.serialization.internal/PairSerializer.<init>|<init>(kotlinx.serialization.KSerializer<1:0>;kotlinx.serialization.KSerializer<1:1>){}[0]

    final val descriptor // kotlinx.serialization.internal/PairSerializer.descriptor|{}descriptor[0]
        final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization.internal/PairSerializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
}

final class <#A: kotlin/Any?> kotlinx.serialization.internal/ArrayListSerializer : kotlinx.serialization.internal/CollectionSerializer<#A, kotlin.collections/List<#A>, kotlin.collections/ArrayList<#A>> { // kotlinx.serialization.internal/ArrayListSerializer|null[0]
    constructor <init>(kotlinx.serialization/KSerializer<#A>) // kotlinx.serialization.internal/ArrayListSerializer.<init>|<init>(kotlinx.serialization.KSerializer<1:0>){}[0]

    final val descriptor // kotlinx.serialization.internal/ArrayListSerializer.descriptor|{}descriptor[0]
        final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization.internal/ArrayListSerializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
}

final class <#A: kotlin/Any?> kotlinx.serialization.internal/HashSetSerializer : kotlinx.serialization.internal/CollectionSerializer<#A, kotlin.collections/Set<#A>, kotlin.collections/HashSet<#A>> { // kotlinx.serialization.internal/HashSetSerializer|null[0]
    constructor <init>(kotlinx.serialization/KSerializer<#A>) // kotlinx.serialization.internal/HashSetSerializer.<init>|<init>(kotlinx.serialization.KSerializer<1:0>){}[0]

    final val descriptor // kotlinx.serialization.internal/HashSetSerializer.descriptor|{}descriptor[0]
        final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization.internal/HashSetSerializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
}

final class <#A: kotlin/Enum<#A>> kotlinx.serialization.internal/EnumSerializer : kotlinx.serialization/KSerializer<#A> { // kotlinx.serialization.internal/EnumSerializer|null[0]
    constructor <init>(kotlin/String, kotlin/Array<#A>) // kotlinx.serialization.internal/EnumSerializer.<init>|<init>(kotlin.String;kotlin.Array<1:0>){}[0]

    final val descriptor // kotlinx.serialization.internal/EnumSerializer.descriptor|{}descriptor[0]
        final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization.internal/EnumSerializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

    final fun deserialize(kotlinx.serialization.encoding/Decoder): #A // kotlinx.serialization.internal/EnumSerializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
    final fun serialize(kotlinx.serialization.encoding/Encoder, #A) // kotlinx.serialization.internal/EnumSerializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;1:0){}[0]
    final fun toString(): kotlin/String // kotlinx.serialization.internal/EnumSerializer.toString|toString(){}[0]
}

final class kotlinx.serialization.descriptors/ClassSerialDescriptorBuilder { // kotlinx.serialization.descriptors/ClassSerialDescriptorBuilder|null[0]
    final val serialName // kotlinx.serialization.descriptors/ClassSerialDescriptorBuilder.serialName|{}serialName[0]
        final fun <get-serialName>(): kotlin/String // kotlinx.serialization.descriptors/ClassSerialDescriptorBuilder.serialName.<get-serialName>|<get-serialName>(){}[0]

    final var annotations // kotlinx.serialization.descriptors/ClassSerialDescriptorBuilder.annotations|{}annotations[0]
        final fun <get-annotations>(): kotlin.collections/List<kotlin/Annotation> // kotlinx.serialization.descriptors/ClassSerialDescriptorBuilder.annotations.<get-annotations>|<get-annotations>(){}[0]
        final fun <set-annotations>(kotlin.collections/List<kotlin/Annotation>) // kotlinx.serialization.descriptors/ClassSerialDescriptorBuilder.annotations.<set-annotations>|<set-annotations>(kotlin.collections.List<kotlin.Annotation>){}[0]
    final var isNullable // kotlinx.serialization.descriptors/ClassSerialDescriptorBuilder.isNullable|{}isNullable[0]
        final fun <get-isNullable>(): kotlin/Boolean // kotlinx.serialization.descriptors/ClassSerialDescriptorBuilder.isNullable.<get-isNullable>|<get-isNullable>(){}[0]
        final fun <set-isNullable>(kotlin/Boolean) // kotlinx.serialization.descriptors/ClassSerialDescriptorBuilder.isNullable.<set-isNullable>|<set-isNullable>(kotlin.Boolean){}[0]

    final fun element(kotlin/String, kotlinx.serialization.descriptors/SerialDescriptor, kotlin.collections/List<kotlin/Annotation> = ..., kotlin/Boolean = ...) // kotlinx.serialization.descriptors/ClassSerialDescriptorBuilder.element|element(kotlin.String;kotlinx.serialization.descriptors.SerialDescriptor;kotlin.collections.List<kotlin.Annotation>;kotlin.Boolean){}[0]
}

final class kotlinx.serialization.internal/BooleanArrayBuilder : kotlinx.serialization.internal/PrimitiveArrayBuilder<kotlin/BooleanArray> // kotlinx.serialization.internal/BooleanArrayBuilder|null[0]

final class kotlinx.serialization.internal/ByteArrayBuilder : kotlinx.serialization.internal/PrimitiveArrayBuilder<kotlin/ByteArray> // kotlinx.serialization.internal/ByteArrayBuilder|null[0]

final class kotlinx.serialization.internal/CharArrayBuilder : kotlinx.serialization.internal/PrimitiveArrayBuilder<kotlin/CharArray> // kotlinx.serialization.internal/CharArrayBuilder|null[0]

final class kotlinx.serialization.internal/DoubleArrayBuilder : kotlinx.serialization.internal/PrimitiveArrayBuilder<kotlin/DoubleArray> // kotlinx.serialization.internal/DoubleArrayBuilder|null[0]

final class kotlinx.serialization.internal/ElementMarker { // kotlinx.serialization.internal/ElementMarker|null[0]
    constructor <init>(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Function2<kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int, kotlin/Boolean>) // kotlinx.serialization.internal/ElementMarker.<init>|<init>(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Function2<kotlinx.serialization.descriptors.SerialDescriptor,kotlin.Int,kotlin.Boolean>){}[0]

    final fun mark(kotlin/Int) // kotlinx.serialization.internal/ElementMarker.mark|mark(kotlin.Int){}[0]
    final fun nextUnmarkedIndex(): kotlin/Int // kotlinx.serialization.internal/ElementMarker.nextUnmarkedIndex|nextUnmarkedIndex(){}[0]
}

final class kotlinx.serialization.internal/EnumDescriptor : kotlinx.serialization.internal/PluginGeneratedSerialDescriptor { // kotlinx.serialization.internal/EnumDescriptor|null[0]
    constructor <init>(kotlin/String, kotlin/Int) // kotlinx.serialization.internal/EnumDescriptor.<init>|<init>(kotlin.String;kotlin.Int){}[0]

    final val kind // kotlinx.serialization.internal/EnumDescriptor.kind|{}kind[0]
        final fun <get-kind>(): kotlinx.serialization.descriptors/SerialKind // kotlinx.serialization.internal/EnumDescriptor.kind.<get-kind>|<get-kind>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // kotlinx.serialization.internal/EnumDescriptor.equals|equals(kotlin.Any?){}[0]
    final fun getElementDescriptor(kotlin/Int): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization.internal/EnumDescriptor.getElementDescriptor|getElementDescriptor(kotlin.Int){}[0]
    final fun hashCode(): kotlin/Int // kotlinx.serialization.internal/EnumDescriptor.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // kotlinx.serialization.internal/EnumDescriptor.toString|toString(){}[0]
}

final class kotlinx.serialization.internal/FloatArrayBuilder : kotlinx.serialization.internal/PrimitiveArrayBuilder<kotlin/FloatArray> // kotlinx.serialization.internal/FloatArrayBuilder|null[0]

final class kotlinx.serialization.internal/InlineClassDescriptor : kotlinx.serialization.internal/PluginGeneratedSerialDescriptor { // kotlinx.serialization.internal/InlineClassDescriptor|null[0]
    constructor <init>(kotlin/String, kotlinx.serialization.internal/GeneratedSerializer<*>) // kotlinx.serialization.internal/InlineClassDescriptor.<init>|<init>(kotlin.String;kotlinx.serialization.internal.GeneratedSerializer<*>){}[0]

    final val isInline // kotlinx.serialization.internal/InlineClassDescriptor.isInline|{}isInline[0]
        final fun <get-isInline>(): kotlin/Boolean // kotlinx.serialization.internal/InlineClassDescriptor.isInline.<get-isInline>|<get-isInline>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // kotlinx.serialization.internal/InlineClassDescriptor.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // kotlinx.serialization.internal/InlineClassDescriptor.hashCode|hashCode(){}[0]
}

final class kotlinx.serialization.internal/IntArrayBuilder : kotlinx.serialization.internal/PrimitiveArrayBuilder<kotlin/IntArray> // kotlinx.serialization.internal/IntArrayBuilder|null[0]

final class kotlinx.serialization.internal/LongArrayBuilder : kotlinx.serialization.internal/PrimitiveArrayBuilder<kotlin/LongArray> // kotlinx.serialization.internal/LongArrayBuilder|null[0]

final class kotlinx.serialization.internal/SerializationConstructorMarker // kotlinx.serialization.internal/SerializationConstructorMarker|null[0]

final class kotlinx.serialization.internal/ShortArrayBuilder : kotlinx.serialization.internal/PrimitiveArrayBuilder<kotlin/ShortArray> // kotlinx.serialization.internal/ShortArrayBuilder|null[0]

final class kotlinx.serialization.internal/UByteArrayBuilder : kotlinx.serialization.internal/PrimitiveArrayBuilder<kotlin/UByteArray> // kotlinx.serialization.internal/UByteArrayBuilder|null[0]

final class kotlinx.serialization.internal/UIntArrayBuilder : kotlinx.serialization.internal/PrimitiveArrayBuilder<kotlin/UIntArray> // kotlinx.serialization.internal/UIntArrayBuilder|null[0]

final class kotlinx.serialization.internal/ULongArrayBuilder : kotlinx.serialization.internal/PrimitiveArrayBuilder<kotlin/ULongArray> // kotlinx.serialization.internal/ULongArrayBuilder|null[0]

final class kotlinx.serialization.internal/UShortArrayBuilder : kotlinx.serialization.internal/PrimitiveArrayBuilder<kotlin/UShortArray> // kotlinx.serialization.internal/UShortArrayBuilder|null[0]

final class kotlinx.serialization.modules/SerializersModuleBuilder : kotlinx.serialization.modules/SerializersModuleCollector { // kotlinx.serialization.modules/SerializersModuleBuilder|null[0]
    constructor <init>() // kotlinx.serialization.modules/SerializersModuleBuilder.<init>|<init>(){}[0]

    final fun <#A1: kotlin/Any, #B1: #A1> polymorphic(kotlin.reflect/KClass<#A1>, kotlin.reflect/KClass<#B1>, kotlinx.serialization/KSerializer<#B1>) // kotlinx.serialization.modules/SerializersModuleBuilder.polymorphic|polymorphic(kotlin.reflect.KClass<0:0>;kotlin.reflect.KClass<0:1>;kotlinx.serialization.KSerializer<0:1>){0§<kotlin.Any>;1§<0:0>}[0]
    final fun <#A1: kotlin/Any> contextual(kotlin.reflect/KClass<#A1>, kotlin/Function1<kotlin.collections/List<kotlinx.serialization/KSerializer<*>>, kotlinx.serialization/KSerializer<*>>) // kotlinx.serialization.modules/SerializersModuleBuilder.contextual|contextual(kotlin.reflect.KClass<0:0>;kotlin.Function1<kotlin.collections.List<kotlinx.serialization.KSerializer<*>>,kotlinx.serialization.KSerializer<*>>){0§<kotlin.Any>}[0]
    final fun <#A1: kotlin/Any> contextual(kotlin.reflect/KClass<#A1>, kotlinx.serialization/KSerializer<#A1>) // kotlinx.serialization.modules/SerializersModuleBuilder.contextual|contextual(kotlin.reflect.KClass<0:0>;kotlinx.serialization.KSerializer<0:0>){0§<kotlin.Any>}[0]
    final fun <#A1: kotlin/Any> polymorphicDefaultDeserializer(kotlin.reflect/KClass<#A1>, kotlin/Function1<kotlin/String?, kotlinx.serialization/DeserializationStrategy<#A1>?>) // kotlinx.serialization.modules/SerializersModuleBuilder.polymorphicDefaultDeserializer|polymorphicDefaultDeserializer(kotlin.reflect.KClass<0:0>;kotlin.Function1<kotlin.String?,kotlinx.serialization.DeserializationStrategy<0:0>?>){0§<kotlin.Any>}[0]
    final fun <#A1: kotlin/Any> polymorphicDefaultSerializer(kotlin.reflect/KClass<#A1>, kotlin/Function1<#A1, kotlinx.serialization/SerializationStrategy<#A1>?>) // kotlinx.serialization.modules/SerializersModuleBuilder.polymorphicDefaultSerializer|polymorphicDefaultSerializer(kotlin.reflect.KClass<0:0>;kotlin.Function1<0:0,kotlinx.serialization.SerializationStrategy<0:0>?>){0§<kotlin.Any>}[0]
    final fun build(): kotlinx.serialization.modules/SerializersModule // kotlinx.serialization.modules/SerializersModuleBuilder.build|build(){}[0]
    final fun include(kotlinx.serialization.modules/SerializersModule) // kotlinx.serialization.modules/SerializersModuleBuilder.include|include(kotlinx.serialization.modules.SerializersModule){}[0]
}

final class kotlinx.serialization/MissingFieldException : kotlinx.serialization/SerializationException { // kotlinx.serialization/MissingFieldException|null[0]
    constructor <init>(kotlin.collections/List<kotlin/String>, kotlin/String) // kotlinx.serialization/MissingFieldException.<init>|<init>(kotlin.collections.List<kotlin.String>;kotlin.String){}[0]
    constructor <init>(kotlin.collections/List<kotlin/String>, kotlin/String?, kotlin/Throwable?) // kotlinx.serialization/MissingFieldException.<init>|<init>(kotlin.collections.List<kotlin.String>;kotlin.String?;kotlin.Throwable?){}[0]
    constructor <init>(kotlin/String) // kotlinx.serialization/MissingFieldException.<init>|<init>(kotlin.String){}[0]
    constructor <init>(kotlin/String, kotlin/String) // kotlinx.serialization/MissingFieldException.<init>|<init>(kotlin.String;kotlin.String){}[0]

    final val missingFields // kotlinx.serialization/MissingFieldException.missingFields|{}missingFields[0]
        final fun <get-missingFields>(): kotlin.collections/List<kotlin/String> // kotlinx.serialization/MissingFieldException.missingFields.<get-missingFields>|<get-missingFields>(){}[0]
}

final class kotlinx.serialization/UnknownFieldException : kotlinx.serialization/SerializationException { // kotlinx.serialization/UnknownFieldException|null[0]
    constructor <init>(kotlin/Int) // kotlinx.serialization/UnknownFieldException.<init>|<init>(kotlin.Int){}[0]
}

open class kotlinx.serialization.internal/PluginGeneratedSerialDescriptor : kotlinx.serialization.descriptors/SerialDescriptor, kotlinx.serialization.internal/CachedNames { // kotlinx.serialization.internal/PluginGeneratedSerialDescriptor|null[0]
    constructor <init>(kotlin/String, kotlinx.serialization.internal/GeneratedSerializer<*>? = ..., kotlin/Int) // kotlinx.serialization.internal/PluginGeneratedSerialDescriptor.<init>|<init>(kotlin.String;kotlinx.serialization.internal.GeneratedSerializer<*>?;kotlin.Int){}[0]

    final val elementsCount // kotlinx.serialization.internal/PluginGeneratedSerialDescriptor.elementsCount|{}elementsCount[0]
        final fun <get-elementsCount>(): kotlin/Int // kotlinx.serialization.internal/PluginGeneratedSerialDescriptor.elementsCount.<get-elementsCount>|<get-elementsCount>(){}[0]
    open val annotations // kotlinx.serialization.internal/PluginGeneratedSerialDescriptor.annotations|{}annotations[0]
        open fun <get-annotations>(): kotlin.collections/List<kotlin/Annotation> // kotlinx.serialization.internal/PluginGeneratedSerialDescriptor.annotations.<get-annotations>|<get-annotations>(){}[0]
    open val kind // kotlinx.serialization.internal/PluginGeneratedSerialDescriptor.kind|{}kind[0]
        open fun <get-kind>(): kotlinx.serialization.descriptors/SerialKind // kotlinx.serialization.internal/PluginGeneratedSerialDescriptor.kind.<get-kind>|<get-kind>(){}[0]
    open val serialName // kotlinx.serialization.internal/PluginGeneratedSerialDescriptor.serialName|{}serialName[0]
        open fun <get-serialName>(): kotlin/String // kotlinx.serialization.internal/PluginGeneratedSerialDescriptor.serialName.<get-serialName>|<get-serialName>(){}[0]
    open val serialNames // kotlinx.serialization.internal/PluginGeneratedSerialDescriptor.serialNames|{}serialNames[0]
        open fun <get-serialNames>(): kotlin.collections/Set<kotlin/String> // kotlinx.serialization.internal/PluginGeneratedSerialDescriptor.serialNames.<get-serialNames>|<get-serialNames>(){}[0]

    final fun addElement(kotlin/String, kotlin/Boolean = ...) // kotlinx.serialization.internal/PluginGeneratedSerialDescriptor.addElement|addElement(kotlin.String;kotlin.Boolean){}[0]
    final fun pushAnnotation(kotlin/Annotation) // kotlinx.serialization.internal/PluginGeneratedSerialDescriptor.pushAnnotation|pushAnnotation(kotlin.Annotation){}[0]
    final fun pushClassAnnotation(kotlin/Annotation) // kotlinx.serialization.internal/PluginGeneratedSerialDescriptor.pushClassAnnotation|pushClassAnnotation(kotlin.Annotation){}[0]
    open fun equals(kotlin/Any?): kotlin/Boolean // kotlinx.serialization.internal/PluginGeneratedSerialDescriptor.equals|equals(kotlin.Any?){}[0]
    open fun getElementAnnotations(kotlin/Int): kotlin.collections/List<kotlin/Annotation> // kotlinx.serialization.internal/PluginGeneratedSerialDescriptor.getElementAnnotations|getElementAnnotations(kotlin.Int){}[0]
    open fun getElementDescriptor(kotlin/Int): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization.internal/PluginGeneratedSerialDescriptor.getElementDescriptor|getElementDescriptor(kotlin.Int){}[0]
    open fun getElementIndex(kotlin/String): kotlin/Int // kotlinx.serialization.internal/PluginGeneratedSerialDescriptor.getElementIndex|getElementIndex(kotlin.String){}[0]
    open fun getElementName(kotlin/Int): kotlin/String // kotlinx.serialization.internal/PluginGeneratedSerialDescriptor.getElementName|getElementName(kotlin.Int){}[0]
    open fun hashCode(): kotlin/Int // kotlinx.serialization.internal/PluginGeneratedSerialDescriptor.hashCode|hashCode(){}[0]
    open fun isElementOptional(kotlin/Int): kotlin/Boolean // kotlinx.serialization.internal/PluginGeneratedSerialDescriptor.isElementOptional|isElementOptional(kotlin.Int){}[0]
    open fun toString(): kotlin/String // kotlinx.serialization.internal/PluginGeneratedSerialDescriptor.toString|toString(){}[0]
}

open class kotlinx.serialization/SerializationException : kotlin/IllegalArgumentException { // kotlinx.serialization/SerializationException|null[0]
    constructor <init>() // kotlinx.serialization/SerializationException.<init>|<init>(){}[0]
    constructor <init>(kotlin/String?) // kotlinx.serialization/SerializationException.<init>|<init>(kotlin.String?){}[0]
    constructor <init>(kotlin/String?, kotlin/Throwable?) // kotlinx.serialization/SerializationException.<init>|<init>(kotlin.String?;kotlin.Throwable?){}[0]
    constructor <init>(kotlin/Throwable?) // kotlinx.serialization/SerializationException.<init>|<init>(kotlin.Throwable?){}[0]
}

sealed class <#A: kotlin/Any?, #B: kotlin/Any?, #C: kotlin/Any?, #D: kotlin.collections/MutableMap<#A, #B>> kotlinx.serialization.internal/MapLikeSerializer : kotlinx.serialization.internal/AbstractCollectionSerializer<kotlin.collections/Map.Entry<#A, #B>, #C, #D> { // kotlinx.serialization.internal/MapLikeSerializer|null[0]
    constructor <init>(kotlinx.serialization/KSerializer<#A>, kotlinx.serialization/KSerializer<#B>) // kotlinx.serialization.internal/MapLikeSerializer.<init>|<init>(kotlinx.serialization.KSerializer<1:0>;kotlinx.serialization.KSerializer<1:1>){}[0]

    abstract val descriptor // kotlinx.serialization.internal/MapLikeSerializer.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization.internal/MapLikeSerializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    final val keySerializer // kotlinx.serialization.internal/MapLikeSerializer.keySerializer|{}keySerializer[0]
        final fun <get-keySerializer>(): kotlinx.serialization/KSerializer<#A> // kotlinx.serialization.internal/MapLikeSerializer.keySerializer.<get-keySerializer>|<get-keySerializer>(){}[0]
    final val valueSerializer // kotlinx.serialization.internal/MapLikeSerializer.valueSerializer|{}valueSerializer[0]
        final fun <get-valueSerializer>(): kotlinx.serialization/KSerializer<#B> // kotlinx.serialization.internal/MapLikeSerializer.valueSerializer.<get-valueSerializer>|<get-valueSerializer>(){}[0]

    abstract fun (#D).insertKeyValuePair(kotlin/Int, #A, #B) // kotlinx.serialization.internal/MapLikeSerializer.insertKeyValuePair|insertKeyValuePair@1:3(kotlin.Int;1:0;1:1){}[0]
    final fun readAll(kotlinx.serialization.encoding/CompositeDecoder, #D, kotlin/Int, kotlin/Int) // kotlinx.serialization.internal/MapLikeSerializer.readAll|readAll(kotlinx.serialization.encoding.CompositeDecoder;1:3;kotlin.Int;kotlin.Int){}[0]
    final fun readElement(kotlinx.serialization.encoding/CompositeDecoder, kotlin/Int, #D, kotlin/Boolean) // kotlinx.serialization.internal/MapLikeSerializer.readElement|readElement(kotlinx.serialization.encoding.CompositeDecoder;kotlin.Int;1:3;kotlin.Boolean){}[0]
    open fun serialize(kotlinx.serialization.encoding/Encoder, #C) // kotlinx.serialization.internal/MapLikeSerializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;1:2){}[0]
}

sealed class <#A: kotlin/Any?, #B: kotlin/Any?, #C: kotlin/Any?> kotlinx.serialization.internal/AbstractCollectionSerializer : kotlinx.serialization/KSerializer<#B> { // kotlinx.serialization.internal/AbstractCollectionSerializer|null[0]
    constructor <init>() // kotlinx.serialization.internal/AbstractCollectionSerializer.<init>|<init>(){}[0]

    abstract fun (#B).collectionIterator(): kotlin.collections/Iterator<#A> // kotlinx.serialization.internal/AbstractCollectionSerializer.collectionIterator|collectionIterator@1:1(){}[0]
    abstract fun (#B).collectionSize(): kotlin/Int // kotlinx.serialization.internal/AbstractCollectionSerializer.collectionSize|collectionSize@1:1(){}[0]
    abstract fun (#B).toBuilder(): #C // kotlinx.serialization.internal/AbstractCollectionSerializer.toBuilder|toBuilder@1:1(){}[0]
    abstract fun (#C).builderSize(): kotlin/Int // kotlinx.serialization.internal/AbstractCollectionSerializer.builderSize|builderSize@1:2(){}[0]
    abstract fun (#C).checkCapacity(kotlin/Int) // kotlinx.serialization.internal/AbstractCollectionSerializer.checkCapacity|checkCapacity@1:2(kotlin.Int){}[0]
    abstract fun (#C).toResult(): #B // kotlinx.serialization.internal/AbstractCollectionSerializer.toResult|toResult@1:2(){}[0]
    abstract fun builder(): #C // kotlinx.serialization.internal/AbstractCollectionSerializer.builder|builder(){}[0]
    abstract fun readAll(kotlinx.serialization.encoding/CompositeDecoder, #C, kotlin/Int, kotlin/Int) // kotlinx.serialization.internal/AbstractCollectionSerializer.readAll|readAll(kotlinx.serialization.encoding.CompositeDecoder;1:2;kotlin.Int;kotlin.Int){}[0]
    abstract fun readElement(kotlinx.serialization.encoding/CompositeDecoder, kotlin/Int, #C, kotlin/Boolean = ...) // kotlinx.serialization.internal/AbstractCollectionSerializer.readElement|readElement(kotlinx.serialization.encoding.CompositeDecoder;kotlin.Int;1:2;kotlin.Boolean){}[0]
    abstract fun serialize(kotlinx.serialization.encoding/Encoder, #B) // kotlinx.serialization.internal/AbstractCollectionSerializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;1:1){}[0]
    final fun merge(kotlinx.serialization.encoding/Decoder, #B?): #B // kotlinx.serialization.internal/AbstractCollectionSerializer.merge|merge(kotlinx.serialization.encoding.Decoder;1:1?){}[0]
    open fun deserialize(kotlinx.serialization.encoding/Decoder): #B // kotlinx.serialization.internal/AbstractCollectionSerializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
}

sealed class <#A: kotlin/Any?, #B: kotlin/Any?, #C: kotlin/Any?> kotlinx.serialization.internal/CollectionLikeSerializer : kotlinx.serialization.internal/AbstractCollectionSerializer<#A, #B, #C> { // kotlinx.serialization.internal/CollectionLikeSerializer|null[0]
    constructor <init>(kotlinx.serialization/KSerializer<#A>) // kotlinx.serialization.internal/CollectionLikeSerializer.<init>|<init>(kotlinx.serialization.KSerializer<1:0>){}[0]

    abstract val descriptor // kotlinx.serialization.internal/CollectionLikeSerializer.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization.internal/CollectionLikeSerializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

    abstract fun (#C).insert(kotlin/Int, #A) // kotlinx.serialization.internal/CollectionLikeSerializer.insert|insert@1:2(kotlin.Int;1:0){}[0]
    final fun readAll(kotlinx.serialization.encoding/CompositeDecoder, #C, kotlin/Int, kotlin/Int) // kotlinx.serialization.internal/CollectionLikeSerializer.readAll|readAll(kotlinx.serialization.encoding.CompositeDecoder;1:2;kotlin.Int;kotlin.Int){}[0]
    open fun readElement(kotlinx.serialization.encoding/CompositeDecoder, kotlin/Int, #C, kotlin/Boolean) // kotlinx.serialization.internal/CollectionLikeSerializer.readElement|readElement(kotlinx.serialization.encoding.CompositeDecoder;kotlin.Int;1:2;kotlin.Boolean){}[0]
    open fun serialize(kotlinx.serialization.encoding/Encoder, #B) // kotlinx.serialization.internal/CollectionLikeSerializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;1:1){}[0]
}

sealed class <#A: kotlin/Any?, #B: kotlin/Any?, #C: kotlin/Any?> kotlinx.serialization.internal/KeyValueSerializer : kotlinx.serialization/KSerializer<#C> { // kotlinx.serialization.internal/KeyValueSerializer|null[0]
    constructor <init>(kotlinx.serialization/KSerializer<#A>, kotlinx.serialization/KSerializer<#B>) // kotlinx.serialization.internal/KeyValueSerializer.<init>|<init>(kotlinx.serialization.KSerializer<1:0>;kotlinx.serialization.KSerializer<1:1>){}[0]

    abstract val key // kotlinx.serialization.internal/KeyValueSerializer.key|@1:2{}key[0]
        abstract fun (#C).<get-key>(): #A // kotlinx.serialization.internal/KeyValueSerializer.key.<get-key>|<get-key>@1:2(){}[0]
    abstract val value // kotlinx.serialization.internal/KeyValueSerializer.value|@1:2{}value[0]
        abstract fun (#C).<get-value>(): #B // kotlinx.serialization.internal/KeyValueSerializer.value.<get-value>|<get-value>@1:2(){}[0]
    final val keySerializer // kotlinx.serialization.internal/KeyValueSerializer.keySerializer|{}keySerializer[0]
        final fun <get-keySerializer>(): kotlinx.serialization/KSerializer<#A> // kotlinx.serialization.internal/KeyValueSerializer.keySerializer.<get-keySerializer>|<get-keySerializer>(){}[0]
    final val valueSerializer // kotlinx.serialization.internal/KeyValueSerializer.valueSerializer|{}valueSerializer[0]
        final fun <get-valueSerializer>(): kotlinx.serialization/KSerializer<#B> // kotlinx.serialization.internal/KeyValueSerializer.valueSerializer.<get-valueSerializer>|<get-valueSerializer>(){}[0]

    abstract fun toResult(#A, #B): #C // kotlinx.serialization.internal/KeyValueSerializer.toResult|toResult(1:0;1:1){}[0]
    open fun deserialize(kotlinx.serialization.encoding/Decoder): #C // kotlinx.serialization.internal/KeyValueSerializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
    open fun serialize(kotlinx.serialization.encoding/Encoder, #C) // kotlinx.serialization.internal/KeyValueSerializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;1:2){}[0]
}

sealed class kotlinx.serialization.descriptors/PolymorphicKind : kotlinx.serialization.descriptors/SerialKind { // kotlinx.serialization.descriptors/PolymorphicKind|null[0]
    constructor <init>() // kotlinx.serialization.descriptors/PolymorphicKind.<init>|<init>(){}[0]

    final object OPEN : kotlinx.serialization.descriptors/PolymorphicKind // kotlinx.serialization.descriptors/PolymorphicKind.OPEN|null[0]

    final object SEALED : kotlinx.serialization.descriptors/PolymorphicKind // kotlinx.serialization.descriptors/PolymorphicKind.SEALED|null[0]
}

sealed class kotlinx.serialization.descriptors/PrimitiveKind : kotlinx.serialization.descriptors/SerialKind { // kotlinx.serialization.descriptors/PrimitiveKind|null[0]
    constructor <init>() // kotlinx.serialization.descriptors/PrimitiveKind.<init>|<init>(){}[0]

    final object BOOLEAN : kotlinx.serialization.descriptors/PrimitiveKind // kotlinx.serialization.descriptors/PrimitiveKind.BOOLEAN|null[0]

    final object BYTE : kotlinx.serialization.descriptors/PrimitiveKind // kotlinx.serialization.descriptors/PrimitiveKind.BYTE|null[0]

    final object CHAR : kotlinx.serialization.descriptors/PrimitiveKind // kotlinx.serialization.descriptors/PrimitiveKind.CHAR|null[0]

    final object DOUBLE : kotlinx.serialization.descriptors/PrimitiveKind // kotlinx.serialization.descriptors/PrimitiveKind.DOUBLE|null[0]

    final object FLOAT : kotlinx.serialization.descriptors/PrimitiveKind // kotlinx.serialization.descriptors/PrimitiveKind.FLOAT|null[0]

    final object INT : kotlinx.serialization.descriptors/PrimitiveKind // kotlinx.serialization.descriptors/PrimitiveKind.INT|null[0]

    final object LONG : kotlinx.serialization.descriptors/PrimitiveKind // kotlinx.serialization.descriptors/PrimitiveKind.LONG|null[0]

    final object SHORT : kotlinx.serialization.descriptors/PrimitiveKind // kotlinx.serialization.descriptors/PrimitiveKind.SHORT|null[0]

    final object STRING : kotlinx.serialization.descriptors/PrimitiveKind // kotlinx.serialization.descriptors/PrimitiveKind.STRING|null[0]
}

sealed class kotlinx.serialization.descriptors/SerialKind { // kotlinx.serialization.descriptors/SerialKind|null[0]
    constructor <init>() // kotlinx.serialization.descriptors/SerialKind.<init>|<init>(){}[0]

    open fun hashCode(): kotlin/Int // kotlinx.serialization.descriptors/SerialKind.hashCode|hashCode(){}[0]
    open fun toString(): kotlin/String // kotlinx.serialization.descriptors/SerialKind.toString|toString(){}[0]

    final object CONTEXTUAL : kotlinx.serialization.descriptors/SerialKind // kotlinx.serialization.descriptors/SerialKind.CONTEXTUAL|null[0]

    final object ENUM : kotlinx.serialization.descriptors/SerialKind // kotlinx.serialization.descriptors/SerialKind.ENUM|null[0]
}

sealed class kotlinx.serialization.descriptors/StructureKind : kotlinx.serialization.descriptors/SerialKind { // kotlinx.serialization.descriptors/StructureKind|null[0]
    constructor <init>() // kotlinx.serialization.descriptors/StructureKind.<init>|<init>(){}[0]

    final object CLASS : kotlinx.serialization.descriptors/StructureKind // kotlinx.serialization.descriptors/StructureKind.CLASS|null[0]

    final object LIST : kotlinx.serialization.descriptors/StructureKind // kotlinx.serialization.descriptors/StructureKind.LIST|null[0]

    final object MAP : kotlinx.serialization.descriptors/StructureKind // kotlinx.serialization.descriptors/StructureKind.MAP|null[0]

    final object OBJECT : kotlinx.serialization.descriptors/StructureKind // kotlinx.serialization.descriptors/StructureKind.OBJECT|null[0]
}

sealed class kotlinx.serialization.modules/SerializersModule { // kotlinx.serialization.modules/SerializersModule|null[0]
    constructor <init>() // kotlinx.serialization.modules/SerializersModule.<init>|<init>(){}[0]

    abstract fun <#A1: kotlin/Any> getContextual(kotlin.reflect/KClass<#A1>, kotlin.collections/List<kotlinx.serialization/KSerializer<*>> = ...): kotlinx.serialization/KSerializer<#A1>? // kotlinx.serialization.modules/SerializersModule.getContextual|getContextual(kotlin.reflect.KClass<0:0>;kotlin.collections.List<kotlinx.serialization.KSerializer<*>>){0§<kotlin.Any>}[0]
    abstract fun <#A1: kotlin/Any> getPolymorphic(kotlin.reflect/KClass<in #A1>, #A1): kotlinx.serialization/SerializationStrategy<#A1>? // kotlinx.serialization.modules/SerializersModule.getPolymorphic|getPolymorphic(kotlin.reflect.KClass<in|0:0>;0:0){0§<kotlin.Any>}[0]
    abstract fun <#A1: kotlin/Any> getPolymorphic(kotlin.reflect/KClass<in #A1>, kotlin/String?): kotlinx.serialization/DeserializationStrategy<#A1>? // kotlinx.serialization.modules/SerializersModule.getPolymorphic|getPolymorphic(kotlin.reflect.KClass<in|0:0>;kotlin.String?){0§<kotlin.Any>}[0]
    abstract fun dumpTo(kotlinx.serialization.modules/SerializersModuleCollector) // kotlinx.serialization.modules/SerializersModule.dumpTo|dumpTo(kotlinx.serialization.modules.SerializersModuleCollector){}[0]
    final fun <#A1: kotlin/Any> getContextual(kotlin.reflect/KClass<#A1>): kotlinx.serialization/KSerializer<#A1>? // kotlinx.serialization.modules/SerializersModule.getContextual|getContextual(kotlin.reflect.KClass<0:0>){0§<kotlin.Any>}[0]
}

final object kotlinx.serialization.builtins/LongAsStringSerializer : kotlinx.serialization/KSerializer<kotlin/Long> { // kotlinx.serialization.builtins/LongAsStringSerializer|null[0]
    final val descriptor // kotlinx.serialization.builtins/LongAsStringSerializer.descriptor|{}descriptor[0]
        final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization.builtins/LongAsStringSerializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

    final fun deserialize(kotlinx.serialization.encoding/Decoder): kotlin/Long // kotlinx.serialization.builtins/LongAsStringSerializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
    final fun serialize(kotlinx.serialization.encoding/Encoder, kotlin/Long) // kotlinx.serialization.builtins/LongAsStringSerializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;kotlin.Long){}[0]
}

final object kotlinx.serialization.internal/BooleanArraySerializer : kotlinx.serialization.internal/PrimitiveArraySerializer<kotlin/Boolean, kotlin/BooleanArray, kotlinx.serialization.internal/BooleanArrayBuilder>, kotlinx.serialization/KSerializer<kotlin/BooleanArray> // kotlinx.serialization.internal/BooleanArraySerializer|null[0]

final object kotlinx.serialization.internal/BooleanSerializer : kotlinx.serialization/KSerializer<kotlin/Boolean> { // kotlinx.serialization.internal/BooleanSerializer|null[0]
    final val descriptor // kotlinx.serialization.internal/BooleanSerializer.descriptor|{}descriptor[0]
        final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization.internal/BooleanSerializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

    final fun deserialize(kotlinx.serialization.encoding/Decoder): kotlin/Boolean // kotlinx.serialization.internal/BooleanSerializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
    final fun serialize(kotlinx.serialization.encoding/Encoder, kotlin/Boolean) // kotlinx.serialization.internal/BooleanSerializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;kotlin.Boolean){}[0]
}

final object kotlinx.serialization.internal/ByteArraySerializer : kotlinx.serialization.internal/PrimitiveArraySerializer<kotlin/Byte, kotlin/ByteArray, kotlinx.serialization.internal/ByteArrayBuilder>, kotlinx.serialization/KSerializer<kotlin/ByteArray> // kotlinx.serialization.internal/ByteArraySerializer|null[0]

final object kotlinx.serialization.internal/ByteSerializer : kotlinx.serialization/KSerializer<kotlin/Byte> { // kotlinx.serialization.internal/ByteSerializer|null[0]
    final val descriptor // kotlinx.serialization.internal/ByteSerializer.descriptor|{}descriptor[0]
        final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization.internal/ByteSerializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

    final fun deserialize(kotlinx.serialization.encoding/Decoder): kotlin/Byte // kotlinx.serialization.internal/ByteSerializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
    final fun serialize(kotlinx.serialization.encoding/Encoder, kotlin/Byte) // kotlinx.serialization.internal/ByteSerializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;kotlin.Byte){}[0]
}

final object kotlinx.serialization.internal/CharArraySerializer : kotlinx.serialization.internal/PrimitiveArraySerializer<kotlin/Char, kotlin/CharArray, kotlinx.serialization.internal/CharArrayBuilder>, kotlinx.serialization/KSerializer<kotlin/CharArray> // kotlinx.serialization.internal/CharArraySerializer|null[0]

final object kotlinx.serialization.internal/CharSerializer : kotlinx.serialization/KSerializer<kotlin/Char> { // kotlinx.serialization.internal/CharSerializer|null[0]
    final val descriptor // kotlinx.serialization.internal/CharSerializer.descriptor|{}descriptor[0]
        final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization.internal/CharSerializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

    final fun deserialize(kotlinx.serialization.encoding/Decoder): kotlin/Char // kotlinx.serialization.internal/CharSerializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
    final fun serialize(kotlinx.serialization.encoding/Encoder, kotlin/Char) // kotlinx.serialization.internal/CharSerializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;kotlin.Char){}[0]
}

final object kotlinx.serialization.internal/DoubleArraySerializer : kotlinx.serialization.internal/PrimitiveArraySerializer<kotlin/Double, kotlin/DoubleArray, kotlinx.serialization.internal/DoubleArrayBuilder>, kotlinx.serialization/KSerializer<kotlin/DoubleArray> // kotlinx.serialization.internal/DoubleArraySerializer|null[0]

final object kotlinx.serialization.internal/DoubleSerializer : kotlinx.serialization/KSerializer<kotlin/Double> { // kotlinx.serialization.internal/DoubleSerializer|null[0]
    final val descriptor // kotlinx.serialization.internal/DoubleSerializer.descriptor|{}descriptor[0]
        final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization.internal/DoubleSerializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

    final fun deserialize(kotlinx.serialization.encoding/Decoder): kotlin/Double // kotlinx.serialization.internal/DoubleSerializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
    final fun serialize(kotlinx.serialization.encoding/Encoder, kotlin/Double) // kotlinx.serialization.internal/DoubleSerializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;kotlin.Double){}[0]
}

final object kotlinx.serialization.internal/DurationSerializer : kotlinx.serialization/KSerializer<kotlin.time/Duration> { // kotlinx.serialization.internal/DurationSerializer|null[0]
    final val descriptor // kotlinx.serialization.internal/DurationSerializer.descriptor|{}descriptor[0]
        final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization.internal/DurationSerializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

    final fun deserialize(kotlinx.serialization.encoding/Decoder): kotlin.time/Duration // kotlinx.serialization.internal/DurationSerializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
    final fun serialize(kotlinx.serialization.encoding/Encoder, kotlin.time/Duration) // kotlinx.serialization.internal/DurationSerializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;kotlin.time.Duration){}[0]
}

final object kotlinx.serialization.internal/FloatArraySerializer : kotlinx.serialization.internal/PrimitiveArraySerializer<kotlin/Float, kotlin/FloatArray, kotlinx.serialization.internal/FloatArrayBuilder>, kotlinx.serialization/KSerializer<kotlin/FloatArray> // kotlinx.serialization.internal/FloatArraySerializer|null[0]

final object kotlinx.serialization.internal/FloatSerializer : kotlinx.serialization/KSerializer<kotlin/Float> { // kotlinx.serialization.internal/FloatSerializer|null[0]
    final val descriptor // kotlinx.serialization.internal/FloatSerializer.descriptor|{}descriptor[0]
        final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization.internal/FloatSerializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

    final fun deserialize(kotlinx.serialization.encoding/Decoder): kotlin/Float // kotlinx.serialization.internal/FloatSerializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
    final fun serialize(kotlinx.serialization.encoding/Encoder, kotlin/Float) // kotlinx.serialization.internal/FloatSerializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;kotlin.Float){}[0]
}

final object kotlinx.serialization.internal/IntArraySerializer : kotlinx.serialization.internal/PrimitiveArraySerializer<kotlin/Int, kotlin/IntArray, kotlinx.serialization.internal/IntArrayBuilder>, kotlinx.serialization/KSerializer<kotlin/IntArray> // kotlinx.serialization.internal/IntArraySerializer|null[0]

final object kotlinx.serialization.internal/IntSerializer : kotlinx.serialization/KSerializer<kotlin/Int> { // kotlinx.serialization.internal/IntSerializer|null[0]
    final val descriptor // kotlinx.serialization.internal/IntSerializer.descriptor|{}descriptor[0]
        final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization.internal/IntSerializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

    final fun deserialize(kotlinx.serialization.encoding/Decoder): kotlin/Int // kotlinx.serialization.internal/IntSerializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
    final fun serialize(kotlinx.serialization.encoding/Encoder, kotlin/Int) // kotlinx.serialization.internal/IntSerializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;kotlin.Int){}[0]
}

final object kotlinx.serialization.internal/LongArraySerializer : kotlinx.serialization.internal/PrimitiveArraySerializer<kotlin/Long, kotlin/LongArray, kotlinx.serialization.internal/LongArrayBuilder>, kotlinx.serialization/KSerializer<kotlin/LongArray> // kotlinx.serialization.internal/LongArraySerializer|null[0]

final object kotlinx.serialization.internal/LongSerializer : kotlinx.serialization/KSerializer<kotlin/Long> { // kotlinx.serialization.internal/LongSerializer|null[0]
    final val descriptor // kotlinx.serialization.internal/LongSerializer.descriptor|{}descriptor[0]
        final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization.internal/LongSerializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

    final fun deserialize(kotlinx.serialization.encoding/Decoder): kotlin/Long // kotlinx.serialization.internal/LongSerializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
    final fun serialize(kotlinx.serialization.encoding/Encoder, kotlin/Long) // kotlinx.serialization.internal/LongSerializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;kotlin.Long){}[0]
}

final object kotlinx.serialization.internal/NothingSerializer : kotlinx.serialization/KSerializer<kotlin/Nothing> { // kotlinx.serialization.internal/NothingSerializer|null[0]
    final val descriptor // kotlinx.serialization.internal/NothingSerializer.descriptor|{}descriptor[0]
        final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization.internal/NothingSerializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

    final fun deserialize(kotlinx.serialization.encoding/Decoder): kotlin/Nothing // kotlinx.serialization.internal/NothingSerializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
    final fun serialize(kotlinx.serialization.encoding/Encoder, kotlin/Nothing) // kotlinx.serialization.internal/NothingSerializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;kotlin.Nothing){}[0]
}

final object kotlinx.serialization.internal/ShortArraySerializer : kotlinx.serialization.internal/PrimitiveArraySerializer<kotlin/Short, kotlin/ShortArray, kotlinx.serialization.internal/ShortArrayBuilder>, kotlinx.serialization/KSerializer<kotlin/ShortArray> // kotlinx.serialization.internal/ShortArraySerializer|null[0]

final object kotlinx.serialization.internal/ShortSerializer : kotlinx.serialization/KSerializer<kotlin/Short> { // kotlinx.serialization.internal/ShortSerializer|null[0]
    final val descriptor // kotlinx.serialization.internal/ShortSerializer.descriptor|{}descriptor[0]
        final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization.internal/ShortSerializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

    final fun deserialize(kotlinx.serialization.encoding/Decoder): kotlin/Short // kotlinx.serialization.internal/ShortSerializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
    final fun serialize(kotlinx.serialization.encoding/Encoder, kotlin/Short) // kotlinx.serialization.internal/ShortSerializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;kotlin.Short){}[0]
}

final object kotlinx.serialization.internal/StringSerializer : kotlinx.serialization/KSerializer<kotlin/String> { // kotlinx.serialization.internal/StringSerializer|null[0]
    final val descriptor // kotlinx.serialization.internal/StringSerializer.descriptor|{}descriptor[0]
        final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization.internal/StringSerializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

    final fun deserialize(kotlinx.serialization.encoding/Decoder): kotlin/String // kotlinx.serialization.internal/StringSerializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
    final fun serialize(kotlinx.serialization.encoding/Encoder, kotlin/String) // kotlinx.serialization.internal/StringSerializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;kotlin.String){}[0]
}

final object kotlinx.serialization.internal/UByteArraySerializer : kotlinx.serialization.internal/PrimitiveArraySerializer<kotlin/UByte, kotlin/UByteArray, kotlinx.serialization.internal/UByteArrayBuilder>, kotlinx.serialization/KSerializer<kotlin/UByteArray> // kotlinx.serialization.internal/UByteArraySerializer|null[0]

final object kotlinx.serialization.internal/UByteSerializer : kotlinx.serialization/KSerializer<kotlin/UByte> { // kotlinx.serialization.internal/UByteSerializer|null[0]
    final val descriptor // kotlinx.serialization.internal/UByteSerializer.descriptor|{}descriptor[0]
        final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization.internal/UByteSerializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

    final fun deserialize(kotlinx.serialization.encoding/Decoder): kotlin/UByte // kotlinx.serialization.internal/UByteSerializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
    final fun serialize(kotlinx.serialization.encoding/Encoder, kotlin/UByte) // kotlinx.serialization.internal/UByteSerializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;kotlin.UByte){}[0]
}

final object kotlinx.serialization.internal/UIntArraySerializer : kotlinx.serialization.internal/PrimitiveArraySerializer<kotlin/UInt, kotlin/UIntArray, kotlinx.serialization.internal/UIntArrayBuilder>, kotlinx.serialization/KSerializer<kotlin/UIntArray> // kotlinx.serialization.internal/UIntArraySerializer|null[0]

final object kotlinx.serialization.internal/UIntSerializer : kotlinx.serialization/KSerializer<kotlin/UInt> { // kotlinx.serialization.internal/UIntSerializer|null[0]
    final val descriptor // kotlinx.serialization.internal/UIntSerializer.descriptor|{}descriptor[0]
        final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization.internal/UIntSerializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

    final fun deserialize(kotlinx.serialization.encoding/Decoder): kotlin/UInt // kotlinx.serialization.internal/UIntSerializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
    final fun serialize(kotlinx.serialization.encoding/Encoder, kotlin/UInt) // kotlinx.serialization.internal/UIntSerializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;kotlin.UInt){}[0]
}

final object kotlinx.serialization.internal/ULongArraySerializer : kotlinx.serialization.internal/PrimitiveArraySerializer<kotlin/ULong, kotlin/ULongArray, kotlinx.serialization.internal/ULongArrayBuilder>, kotlinx.serialization/KSerializer<kotlin/ULongArray> // kotlinx.serialization.internal/ULongArraySerializer|null[0]

final object kotlinx.serialization.internal/ULongSerializer : kotlinx.serialization/KSerializer<kotlin/ULong> { // kotlinx.serialization.internal/ULongSerializer|null[0]
    final val descriptor // kotlinx.serialization.internal/ULongSerializer.descriptor|{}descriptor[0]
        final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization.internal/ULongSerializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

    final fun deserialize(kotlinx.serialization.encoding/Decoder): kotlin/ULong // kotlinx.serialization.internal/ULongSerializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
    final fun serialize(kotlinx.serialization.encoding/Encoder, kotlin/ULong) // kotlinx.serialization.internal/ULongSerializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;kotlin.ULong){}[0]
}

final object kotlinx.serialization.internal/UShortArraySerializer : kotlinx.serialization.internal/PrimitiveArraySerializer<kotlin/UShort, kotlin/UShortArray, kotlinx.serialization.internal/UShortArrayBuilder>, kotlinx.serialization/KSerializer<kotlin/UShortArray> // kotlinx.serialization.internal/UShortArraySerializer|null[0]

final object kotlinx.serialization.internal/UShortSerializer : kotlinx.serialization/KSerializer<kotlin/UShort> { // kotlinx.serialization.internal/UShortSerializer|null[0]
    final val descriptor // kotlinx.serialization.internal/UShortSerializer.descriptor|{}descriptor[0]
        final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization.internal/UShortSerializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

    final fun deserialize(kotlinx.serialization.encoding/Decoder): kotlin/UShort // kotlinx.serialization.internal/UShortSerializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
    final fun serialize(kotlinx.serialization.encoding/Encoder, kotlin/UShort) // kotlinx.serialization.internal/UShortSerializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;kotlin.UShort){}[0]
}

final object kotlinx.serialization.internal/UnitSerializer : kotlinx.serialization/KSerializer<kotlin/Unit> { // kotlinx.serialization.internal/UnitSerializer|null[0]
    final val descriptor // kotlinx.serialization.internal/UnitSerializer.descriptor|{}descriptor[0]
        final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization.internal/UnitSerializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

    final fun deserialize(kotlinx.serialization.encoding/Decoder) // kotlinx.serialization.internal/UnitSerializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
    final fun serialize(kotlinx.serialization.encoding/Encoder, kotlin/Unit) // kotlinx.serialization.internal/UnitSerializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;kotlin.Unit){}[0]
}

final val kotlinx.serialization.builtins/nullable // kotlinx.serialization.builtins/nullable|@kotlinx.serialization.KSerializer<0:0>{0§<kotlin.Any>}nullable[0]
    final fun <#A1: kotlin/Any> (kotlinx.serialization/KSerializer<#A1>).<get-nullable>(): kotlinx.serialization/KSerializer<#A1?> // kotlinx.serialization.builtins/nullable.<get-nullable>|<get-nullable>@kotlinx.serialization.KSerializer<0:0>(){0§<kotlin.Any>}[0]
final val kotlinx.serialization.descriptors/capturedKClass // kotlinx.serialization.descriptors/capturedKClass|@kotlinx.serialization.descriptors.SerialDescriptor{}capturedKClass[0]
    final fun (kotlinx.serialization.descriptors/SerialDescriptor).<get-capturedKClass>(): kotlin.reflect/KClass<*>? // kotlinx.serialization.descriptors/capturedKClass.<get-capturedKClass>|<get-capturedKClass>@kotlinx.serialization.descriptors.SerialDescriptor(){}[0]
final val kotlinx.serialization.descriptors/elementDescriptors // kotlinx.serialization.descriptors/elementDescriptors|@kotlinx.serialization.descriptors.SerialDescriptor{}elementDescriptors[0]
    final fun (kotlinx.serialization.descriptors/SerialDescriptor).<get-elementDescriptors>(): kotlin.collections/Iterable<kotlinx.serialization.descriptors/SerialDescriptor> // kotlinx.serialization.descriptors/elementDescriptors.<get-elementDescriptors>|<get-elementDescriptors>@kotlinx.serialization.descriptors.SerialDescriptor(){}[0]
final val kotlinx.serialization.descriptors/elementNames // kotlinx.serialization.descriptors/elementNames|@kotlinx.serialization.descriptors.SerialDescriptor{}elementNames[0]
    final fun (kotlinx.serialization.descriptors/SerialDescriptor).<get-elementNames>(): kotlin.collections/Iterable<kotlin/String> // kotlinx.serialization.descriptors/elementNames.<get-elementNames>|<get-elementNames>@kotlinx.serialization.descriptors.SerialDescriptor(){}[0]
final val kotlinx.serialization.descriptors/nonNullOriginal // kotlinx.serialization.descriptors/nonNullOriginal|@kotlinx.serialization.descriptors.SerialDescriptor{}nonNullOriginal[0]
    final fun (kotlinx.serialization.descriptors/SerialDescriptor).<get-nonNullOriginal>(): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization.descriptors/nonNullOriginal.<get-nonNullOriginal>|<get-nonNullOriginal>@kotlinx.serialization.descriptors.SerialDescriptor(){}[0]
final val kotlinx.serialization.descriptors/nullable // kotlinx.serialization.descriptors/nullable|@kotlinx.serialization.descriptors.SerialDescriptor{}nullable[0]
    final fun (kotlinx.serialization.descriptors/SerialDescriptor).<get-nullable>(): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization.descriptors/nullable.<get-nullable>|<get-nullable>@kotlinx.serialization.descriptors.SerialDescriptor(){}[0]
final val kotlinx.serialization.modules/EmptySerializersModule // kotlinx.serialization.modules/EmptySerializersModule|{}EmptySerializersModule[0]
    final fun <get-EmptySerializersModule>(): kotlinx.serialization.modules/SerializersModule // kotlinx.serialization.modules/EmptySerializersModule.<get-EmptySerializersModule>|<get-EmptySerializersModule>(){}[0]

final fun (kotlin.time/Duration.Companion).kotlinx.serialization.builtins/serializer(): kotlinx.serialization/KSerializer<kotlin.time/Duration> // kotlinx.serialization.builtins/serializer|serializer@kotlin.time.Duration.Companion(){}[0]
final fun (kotlin/Boolean.Companion).kotlinx.serialization.builtins/serializer(): kotlinx.serialization/KSerializer<kotlin/Boolean> // kotlinx.serialization.builtins/serializer|serializer@kotlin.Boolean.Companion(){}[0]
final fun (kotlin/Byte.Companion).kotlinx.serialization.builtins/serializer(): kotlinx.serialization/KSerializer<kotlin/Byte> // kotlinx.serialization.builtins/serializer|serializer@kotlin.Byte.Companion(){}[0]
final fun (kotlin/Char.Companion).kotlinx.serialization.builtins/serializer(): kotlinx.serialization/KSerializer<kotlin/Char> // kotlinx.serialization.builtins/serializer|serializer@kotlin.Char.Companion(){}[0]
final fun (kotlin/Double.Companion).kotlinx.serialization.builtins/serializer(): kotlinx.serialization/KSerializer<kotlin/Double> // kotlinx.serialization.builtins/serializer|serializer@kotlin.Double.Companion(){}[0]
final fun (kotlin/Float.Companion).kotlinx.serialization.builtins/serializer(): kotlinx.serialization/KSerializer<kotlin/Float> // kotlinx.serialization.builtins/serializer|serializer@kotlin.Float.Companion(){}[0]
final fun (kotlin/Int.Companion).kotlinx.serialization.builtins/serializer(): kotlinx.serialization/KSerializer<kotlin/Int> // kotlinx.serialization.builtins/serializer|serializer@kotlin.Int.Companion(){}[0]
final fun (kotlin/Long.Companion).kotlinx.serialization.builtins/serializer(): kotlinx.serialization/KSerializer<kotlin/Long> // kotlinx.serialization.builtins/serializer|serializer@kotlin.Long.Companion(){}[0]
final fun (kotlin/Short.Companion).kotlinx.serialization.builtins/serializer(): kotlinx.serialization/KSerializer<kotlin/Short> // kotlinx.serialization.builtins/serializer|serializer@kotlin.Short.Companion(){}[0]
final fun (kotlin/String.Companion).kotlinx.serialization.builtins/serializer(): kotlinx.serialization/KSerializer<kotlin/String> // kotlinx.serialization.builtins/serializer|serializer@kotlin.String.Companion(){}[0]
final fun (kotlin/UByte.Companion).kotlinx.serialization.builtins/serializer(): kotlinx.serialization/KSerializer<kotlin/UByte> // kotlinx.serialization.builtins/serializer|serializer@kotlin.UByte.Companion(){}[0]
final fun (kotlin/UInt.Companion).kotlinx.serialization.builtins/serializer(): kotlinx.serialization/KSerializer<kotlin/UInt> // kotlinx.serialization.builtins/serializer|serializer@kotlin.UInt.Companion(){}[0]
final fun (kotlin/ULong.Companion).kotlinx.serialization.builtins/serializer(): kotlinx.serialization/KSerializer<kotlin/ULong> // kotlinx.serialization.builtins/serializer|serializer@kotlin.ULong.Companion(){}[0]
final fun (kotlin/UShort.Companion).kotlinx.serialization.builtins/serializer(): kotlinx.serialization/KSerializer<kotlin/UShort> // kotlinx.serialization.builtins/serializer|serializer@kotlin.UShort.Companion(){}[0]
final fun (kotlin/Unit).kotlinx.serialization.builtins/serializer(): kotlinx.serialization/KSerializer<kotlin/Unit> // kotlinx.serialization.builtins/serializer|serializer@kotlin.Unit(){}[0]
final fun (kotlinx.serialization.descriptors/SerialDescriptor).kotlinx.serialization.internal/jsonCachedSerialNames(): kotlin.collections/Set<kotlin/String> // kotlinx.serialization.internal/jsonCachedSerialNames|jsonCachedSerialNames@kotlinx.serialization.descriptors.SerialDescriptor(){}[0]
final fun (kotlinx.serialization.modules/SerializersModule).kotlinx.serialization.descriptors/getContextualDescriptor(kotlinx.serialization.descriptors/SerialDescriptor): kotlinx.serialization.descriptors/SerialDescriptor? // kotlinx.serialization.descriptors/getContextualDescriptor|getContextualDescriptor@kotlinx.serialization.modules.SerializersModule(kotlinx.serialization.descriptors.SerialDescriptor){}[0]
final fun (kotlinx.serialization.modules/SerializersModule).kotlinx.serialization.descriptors/getPolymorphicDescriptors(kotlinx.serialization.descriptors/SerialDescriptor): kotlin.collections/List<kotlinx.serialization.descriptors/SerialDescriptor> // kotlinx.serialization.descriptors/getPolymorphicDescriptors|getPolymorphicDescriptors@kotlinx.serialization.modules.SerializersModule(kotlinx.serialization.descriptors.SerialDescriptor){}[0]
final fun (kotlinx.serialization.modules/SerializersModule).kotlinx.serialization.modules/overwriteWith(kotlinx.serialization.modules/SerializersModule): kotlinx.serialization.modules/SerializersModule // kotlinx.serialization.modules/overwriteWith|overwriteWith@kotlinx.serialization.modules.SerializersModule(kotlinx.serialization.modules.SerializersModule){}[0]
final fun (kotlinx.serialization.modules/SerializersModule).kotlinx.serialization.modules/plus(kotlinx.serialization.modules/SerializersModule): kotlinx.serialization.modules/SerializersModule // kotlinx.serialization.modules/plus|plus@kotlinx.serialization.modules.SerializersModule(kotlinx.serialization.modules.SerializersModule){}[0]
final fun (kotlinx.serialization.modules/SerializersModule).kotlinx.serialization/serializer(kotlin.reflect/KClass<*>, kotlin.collections/List<kotlinx.serialization/KSerializer<*>>, kotlin/Boolean): kotlinx.serialization/KSerializer<kotlin/Any?> // kotlinx.serialization/serializer|serializer@kotlinx.serialization.modules.SerializersModule(kotlin.reflect.KClass<*>;kotlin.collections.List<kotlinx.serialization.KSerializer<*>>;kotlin.Boolean){}[0]
final fun (kotlinx.serialization.modules/SerializersModule).kotlinx.serialization/serializer(kotlin.reflect/KType): kotlinx.serialization/KSerializer<kotlin/Any?> // kotlinx.serialization/serializer|serializer@kotlinx.serialization.modules.SerializersModule(kotlin.reflect.KType){}[0]
final fun (kotlinx.serialization.modules/SerializersModule).kotlinx.serialization/serializerOrNull(kotlin.reflect/KType): kotlinx.serialization/KSerializer<kotlin/Any?>? // kotlinx.serialization/serializerOrNull|serializerOrNull@kotlinx.serialization.modules.SerializersModule(kotlin.reflect.KType){}[0]
final fun <#A: kotlin/Any, #B: #A?> kotlinx.serialization.builtins/ArraySerializer(kotlin.reflect/KClass<#A>, kotlinx.serialization/KSerializer<#B>): kotlinx.serialization/KSerializer<kotlin/Array<#B>> // kotlinx.serialization.builtins/ArraySerializer|ArraySerializer(kotlin.reflect.KClass<0:0>;kotlinx.serialization.KSerializer<0:1>){0§<kotlin.Any>;1§<0:0?>}[0]
final fun <#A: kotlin/Any> (kotlin.reflect/KClass<#A>).kotlinx.serialization/serializer(): kotlinx.serialization/KSerializer<#A> // kotlinx.serialization/serializer|serializer@kotlin.reflect.KClass<0:0>(){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (kotlin.reflect/KClass<#A>).kotlinx.serialization/serializerOrNull(): kotlinx.serialization/KSerializer<#A>? // kotlinx.serialization/serializerOrNull|serializerOrNull@kotlin.reflect.KClass<0:0>(){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (kotlinx.serialization.internal/AbstractPolymorphicSerializer<#A>).kotlinx.serialization/findPolymorphicSerializer(kotlinx.serialization.encoding/CompositeDecoder, kotlin/String?): kotlinx.serialization/DeserializationStrategy<#A> // kotlinx.serialization/findPolymorphicSerializer|findPolymorphicSerializer@kotlinx.serialization.internal.AbstractPolymorphicSerializer<0:0>(kotlinx.serialization.encoding.CompositeDecoder;kotlin.String?){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (kotlinx.serialization.internal/AbstractPolymorphicSerializer<#A>).kotlinx.serialization/findPolymorphicSerializer(kotlinx.serialization.encoding/Encoder, #A): kotlinx.serialization/SerializationStrategy<#A> // kotlinx.serialization/findPolymorphicSerializer|findPolymorphicSerializer@kotlinx.serialization.internal.AbstractPolymorphicSerializer<0:0>(kotlinx.serialization.encoding.Encoder;0:0){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any> kotlinx.serialization.modules/serializersModuleOf(kotlin.reflect/KClass<#A>, kotlinx.serialization/KSerializer<#A>): kotlinx.serialization.modules/SerializersModule // kotlinx.serialization.modules/serializersModuleOf|serializersModuleOf(kotlin.reflect.KClass<0:0>;kotlinx.serialization.KSerializer<0:0>){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any?, #B: kotlin/Any?, #C: kotlin/Any?> kotlinx.serialization.builtins/TripleSerializer(kotlinx.serialization/KSerializer<#A>, kotlinx.serialization/KSerializer<#B>, kotlinx.serialization/KSerializer<#C>): kotlinx.serialization/KSerializer<kotlin/Triple<#A, #B, #C>> // kotlinx.serialization.builtins/TripleSerializer|TripleSerializer(kotlinx.serialization.KSerializer<0:0>;kotlinx.serialization.KSerializer<0:1>;kotlinx.serialization.KSerializer<0:2>){0§<kotlin.Any?>;1§<kotlin.Any?>;2§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?, #B: kotlin/Any?> kotlinx.serialization.builtins/MapEntrySerializer(kotlinx.serialization/KSerializer<#A>, kotlinx.serialization/KSerializer<#B>): kotlinx.serialization/KSerializer<kotlin.collections/Map.Entry<#A, #B>> // kotlinx.serialization.builtins/MapEntrySerializer|MapEntrySerializer(kotlinx.serialization.KSerializer<0:0>;kotlinx.serialization.KSerializer<0:1>){0§<kotlin.Any?>;1§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?, #B: kotlin/Any?> kotlinx.serialization.builtins/MapSerializer(kotlinx.serialization/KSerializer<#A>, kotlinx.serialization/KSerializer<#B>): kotlinx.serialization/KSerializer<kotlin.collections/Map<#A, #B>> // kotlinx.serialization.builtins/MapSerializer|MapSerializer(kotlinx.serialization.KSerializer<0:0>;kotlinx.serialization.KSerializer<0:1>){0§<kotlin.Any?>;1§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?, #B: kotlin/Any?> kotlinx.serialization.builtins/PairSerializer(kotlinx.serialization/KSerializer<#A>, kotlinx.serialization/KSerializer<#B>): kotlinx.serialization/KSerializer<kotlin/Pair<#A, #B>> // kotlinx.serialization.builtins/PairSerializer|PairSerializer(kotlinx.serialization.KSerializer<0:0>;kotlinx.serialization.KSerializer<0:1>){0§<kotlin.Any?>;1§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> (kotlinx.serialization/BinaryFormat).kotlinx.serialization/decodeFromHexString(kotlinx.serialization/DeserializationStrategy<#A>, kotlin/String): #A // kotlinx.serialization/decodeFromHexString|decodeFromHexString@kotlinx.serialization.BinaryFormat(kotlinx.serialization.DeserializationStrategy<0:0>;kotlin.String){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> (kotlinx.serialization/BinaryFormat).kotlinx.serialization/encodeToHexString(kotlinx.serialization/SerializationStrategy<#A>, #A): kotlin/String // kotlinx.serialization/encodeToHexString|encodeToHexString@kotlinx.serialization.BinaryFormat(kotlinx.serialization.SerializationStrategy<0:0>;0:0){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> kotlinx.serialization.builtins/ListSerializer(kotlinx.serialization/KSerializer<#A>): kotlinx.serialization/KSerializer<kotlin.collections/List<#A>> // kotlinx.serialization.builtins/ListSerializer|ListSerializer(kotlinx.serialization.KSerializer<0:0>){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> kotlinx.serialization.builtins/SetSerializer(kotlinx.serialization/KSerializer<#A>): kotlinx.serialization/KSerializer<kotlin.collections/Set<#A>> // kotlinx.serialization.builtins/SetSerializer|SetSerializer(kotlinx.serialization.KSerializer<0:0>){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> kotlinx.serialization.internal/InlinePrimitiveDescriptor(kotlin/String, kotlinx.serialization/KSerializer<#A>): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization.internal/InlinePrimitiveDescriptor|InlinePrimitiveDescriptor(kotlin.String;kotlinx.serialization.KSerializer<0:0>){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Enum<#A>> kotlinx.serialization.internal/createAnnotatedEnumSerializer(kotlin/String, kotlin/Array<#A>, kotlin/Array<kotlin/String?>, kotlin/Array<kotlin/Array<kotlin/Annotation>?>, kotlin/Array<kotlin/Annotation>?): kotlinx.serialization/KSerializer<#A> // kotlinx.serialization.internal/createAnnotatedEnumSerializer|createAnnotatedEnumSerializer(kotlin.String;kotlin.Array<0:0>;kotlin.Array<kotlin.String?>;kotlin.Array<kotlin.Array<kotlin.Annotation>?>;kotlin.Array<kotlin.Annotation>?){0§<kotlin.Enum<0:0>>}[0]
final fun <#A: kotlin/Enum<#A>> kotlinx.serialization.internal/createMarkedEnumSerializer(kotlin/String, kotlin/Array<#A>, kotlin/Array<kotlin/String?>, kotlin/Array<kotlin/Array<kotlin/Annotation>?>): kotlinx.serialization/KSerializer<#A> // kotlinx.serialization.internal/createMarkedEnumSerializer|createMarkedEnumSerializer(kotlin.String;kotlin.Array<0:0>;kotlin.Array<kotlin.String?>;kotlin.Array<kotlin.Array<kotlin.Annotation>?>){0§<kotlin.Enum<0:0>>}[0]
final fun <#A: kotlin/Enum<#A>> kotlinx.serialization.internal/createSimpleEnumSerializer(kotlin/String, kotlin/Array<#A>): kotlinx.serialization/KSerializer<#A> // kotlinx.serialization.internal/createSimpleEnumSerializer|createSimpleEnumSerializer(kotlin.String;kotlin.Array<0:0>){0§<kotlin.Enum<0:0>>}[0]
final fun kotlinx.serialization.builtins/BooleanArraySerializer(): kotlinx.serialization/KSerializer<kotlin/BooleanArray> // kotlinx.serialization.builtins/BooleanArraySerializer|BooleanArraySerializer(){}[0]
final fun kotlinx.serialization.builtins/ByteArraySerializer(): kotlinx.serialization/KSerializer<kotlin/ByteArray> // kotlinx.serialization.builtins/ByteArraySerializer|ByteArraySerializer(){}[0]
final fun kotlinx.serialization.builtins/CharArraySerializer(): kotlinx.serialization/KSerializer<kotlin/CharArray> // kotlinx.serialization.builtins/CharArraySerializer|CharArraySerializer(){}[0]
final fun kotlinx.serialization.builtins/DoubleArraySerializer(): kotlinx.serialization/KSerializer<kotlin/DoubleArray> // kotlinx.serialization.builtins/DoubleArraySerializer|DoubleArraySerializer(){}[0]
final fun kotlinx.serialization.builtins/FloatArraySerializer(): kotlinx.serialization/KSerializer<kotlin/FloatArray> // kotlinx.serialization.builtins/FloatArraySerializer|FloatArraySerializer(){}[0]
final fun kotlinx.serialization.builtins/IntArraySerializer(): kotlinx.serialization/KSerializer<kotlin/IntArray> // kotlinx.serialization.builtins/IntArraySerializer|IntArraySerializer(){}[0]
final fun kotlinx.serialization.builtins/LongArraySerializer(): kotlinx.serialization/KSerializer<kotlin/LongArray> // kotlinx.serialization.builtins/LongArraySerializer|LongArraySerializer(){}[0]
final fun kotlinx.serialization.builtins/NothingSerializer(): kotlinx.serialization/KSerializer<kotlin/Nothing> // kotlinx.serialization.builtins/NothingSerializer|NothingSerializer(){}[0]
final fun kotlinx.serialization.builtins/ShortArraySerializer(): kotlinx.serialization/KSerializer<kotlin/ShortArray> // kotlinx.serialization.builtins/ShortArraySerializer|ShortArraySerializer(){}[0]
final fun kotlinx.serialization.builtins/UByteArraySerializer(): kotlinx.serialization/KSerializer<kotlin/UByteArray> // kotlinx.serialization.builtins/UByteArraySerializer|UByteArraySerializer(){}[0]
final fun kotlinx.serialization.builtins/UIntArraySerializer(): kotlinx.serialization/KSerializer<kotlin/UIntArray> // kotlinx.serialization.builtins/UIntArraySerializer|UIntArraySerializer(){}[0]
final fun kotlinx.serialization.builtins/ULongArraySerializer(): kotlinx.serialization/KSerializer<kotlin/ULongArray> // kotlinx.serialization.builtins/ULongArraySerializer|ULongArraySerializer(){}[0]
final fun kotlinx.serialization.builtins/UShortArraySerializer(): kotlinx.serialization/KSerializer<kotlin/UShortArray> // kotlinx.serialization.builtins/UShortArraySerializer|UShortArraySerializer(){}[0]
final fun kotlinx.serialization.descriptors/PrimitiveSerialDescriptor(kotlin/String, kotlinx.serialization.descriptors/PrimitiveKind): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization.descriptors/PrimitiveSerialDescriptor|PrimitiveSerialDescriptor(kotlin.String;kotlinx.serialization.descriptors.PrimitiveKind){}[0]
final fun kotlinx.serialization.descriptors/SerialDescriptor(kotlin/String, kotlinx.serialization.descriptors/SerialDescriptor): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization.descriptors/SerialDescriptor|SerialDescriptor(kotlin.String;kotlinx.serialization.descriptors.SerialDescriptor){}[0]
final fun kotlinx.serialization.descriptors/buildClassSerialDescriptor(kotlin/String, kotlin/Array<out kotlinx.serialization.descriptors/SerialDescriptor>..., kotlin/Function1<kotlinx.serialization.descriptors/ClassSerialDescriptorBuilder, kotlin/Unit> = ...): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization.descriptors/buildClassSerialDescriptor|buildClassSerialDescriptor(kotlin.String;kotlin.Array<out|kotlinx.serialization.descriptors.SerialDescriptor>...;kotlin.Function1<kotlinx.serialization.descriptors.ClassSerialDescriptorBuilder,kotlin.Unit>){}[0]
final fun kotlinx.serialization.descriptors/buildSerialDescriptor(kotlin/String, kotlinx.serialization.descriptors/SerialKind, kotlin/Array<out kotlinx.serialization.descriptors/SerialDescriptor>..., kotlin/Function1<kotlinx.serialization.descriptors/ClassSerialDescriptorBuilder, kotlin/Unit> = ...): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization.descriptors/buildSerialDescriptor|buildSerialDescriptor(kotlin.String;kotlinx.serialization.descriptors.SerialKind;kotlin.Array<out|kotlinx.serialization.descriptors.SerialDescriptor>...;kotlin.Function1<kotlinx.serialization.descriptors.ClassSerialDescriptorBuilder,kotlin.Unit>){}[0]
final fun kotlinx.serialization.descriptors/listSerialDescriptor(kotlinx.serialization.descriptors/SerialDescriptor): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization.descriptors/listSerialDescriptor|listSerialDescriptor(kotlinx.serialization.descriptors.SerialDescriptor){}[0]
final fun kotlinx.serialization.descriptors/mapSerialDescriptor(kotlinx.serialization.descriptors/SerialDescriptor, kotlinx.serialization.descriptors/SerialDescriptor): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization.descriptors/mapSerialDescriptor|mapSerialDescriptor(kotlinx.serialization.descriptors.SerialDescriptor;kotlinx.serialization.descriptors.SerialDescriptor){}[0]
final fun kotlinx.serialization.descriptors/serialDescriptor(kotlin.reflect/KType): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization.descriptors/serialDescriptor|serialDescriptor(kotlin.reflect.KType){}[0]
final fun kotlinx.serialization.descriptors/setSerialDescriptor(kotlinx.serialization.descriptors/SerialDescriptor): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization.descriptors/setSerialDescriptor|setSerialDescriptor(kotlinx.serialization.descriptors.SerialDescriptor){}[0]
final fun kotlinx.serialization.internal/throwArrayMissingFieldException(kotlin/IntArray, kotlin/IntArray, kotlinx.serialization.descriptors/SerialDescriptor) // kotlinx.serialization.internal/throwArrayMissingFieldException|throwArrayMissingFieldException(kotlin.IntArray;kotlin.IntArray;kotlinx.serialization.descriptors.SerialDescriptor){}[0]
final fun kotlinx.serialization.internal/throwMissingFieldException(kotlin/Int, kotlin/Int, kotlinx.serialization.descriptors/SerialDescriptor) // kotlinx.serialization.internal/throwMissingFieldException|throwMissingFieldException(kotlin.Int;kotlin.Int;kotlinx.serialization.descriptors.SerialDescriptor){}[0]
final fun kotlinx.serialization.modules/EmptySerializersModule(): kotlinx.serialization.modules/SerializersModule // kotlinx.serialization.modules/EmptySerializersModule|EmptySerializersModule(){}[0]
final fun kotlinx.serialization/moduleThenPolymorphic(kotlinx.serialization.modules/SerializersModule, kotlin.reflect/KClass<*>): kotlinx.serialization/KSerializer<*> // kotlinx.serialization/moduleThenPolymorphic|moduleThenPolymorphic(kotlinx.serialization.modules.SerializersModule;kotlin.reflect.KClass<*>){}[0]
final fun kotlinx.serialization/moduleThenPolymorphic(kotlinx.serialization.modules/SerializersModule, kotlin.reflect/KClass<*>, kotlin/Array<kotlinx.serialization/KSerializer<*>>): kotlinx.serialization/KSerializer<*> // kotlinx.serialization/moduleThenPolymorphic|moduleThenPolymorphic(kotlinx.serialization.modules.SerializersModule;kotlin.reflect.KClass<*>;kotlin.Array<kotlinx.serialization.KSerializer<*>>){}[0]
final fun kotlinx.serialization/noCompiledSerializer(kotlin/String): kotlinx.serialization/KSerializer<*> // kotlinx.serialization/noCompiledSerializer|noCompiledSerializer(kotlin.String){}[0]
final fun kotlinx.serialization/noCompiledSerializer(kotlinx.serialization.modules/SerializersModule, kotlin.reflect/KClass<*>): kotlinx.serialization/KSerializer<*> // kotlinx.serialization/noCompiledSerializer|noCompiledSerializer(kotlinx.serialization.modules.SerializersModule;kotlin.reflect.KClass<*>){}[0]
final fun kotlinx.serialization/noCompiledSerializer(kotlinx.serialization.modules/SerializersModule, kotlin.reflect/KClass<*>, kotlin/Array<kotlinx.serialization/KSerializer<*>>): kotlinx.serialization/KSerializer<*> // kotlinx.serialization/noCompiledSerializer|noCompiledSerializer(kotlinx.serialization.modules.SerializersModule;kotlin.reflect.KClass<*>;kotlin.Array<kotlinx.serialization.KSerializer<*>>){}[0]
final fun kotlinx.serialization/serializer(kotlin.reflect/KClass<*>, kotlin.collections/List<kotlinx.serialization/KSerializer<*>>, kotlin/Boolean): kotlinx.serialization/KSerializer<kotlin/Any?> // kotlinx.serialization/serializer|serializer(kotlin.reflect.KClass<*>;kotlin.collections.List<kotlinx.serialization.KSerializer<*>>;kotlin.Boolean){}[0]
final fun kotlinx.serialization/serializer(kotlin.reflect/KType): kotlinx.serialization/KSerializer<kotlin/Any?> // kotlinx.serialization/serializer|serializer(kotlin.reflect.KType){}[0]
final fun kotlinx.serialization/serializerOrNull(kotlin.reflect/KType): kotlinx.serialization/KSerializer<kotlin/Any?>? // kotlinx.serialization/serializerOrNull|serializerOrNull(kotlin.reflect.KType){}[0]
final inline fun (kotlinx.serialization.encoding/Encoder).kotlinx.serialization.encoding/encodeCollection(kotlinx.serialization.descriptors/SerialDescriptor, kotlin/Int, crossinline kotlin/Function1<kotlinx.serialization.encoding/CompositeEncoder, kotlin/Unit>) // kotlinx.serialization.encoding/encodeCollection|encodeCollection@kotlinx.serialization.encoding.Encoder(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Int;kotlin.Function1<kotlinx.serialization.encoding.CompositeEncoder,kotlin.Unit>){}[0]
final inline fun (kotlinx.serialization.encoding/Encoder).kotlinx.serialization.encoding/encodeStructure(kotlinx.serialization.descriptors/SerialDescriptor, crossinline kotlin/Function1<kotlinx.serialization.encoding/CompositeEncoder, kotlin/Unit>) // kotlinx.serialization.encoding/encodeStructure|encodeStructure@kotlinx.serialization.encoding.Encoder(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Function1<kotlinx.serialization.encoding.CompositeEncoder,kotlin.Unit>){}[0]
final inline fun <#A: kotlin/Any, #B: reified #A> (kotlinx.serialization.modules/PolymorphicModuleBuilder<#A>).kotlinx.serialization.modules/subclass(kotlin.reflect/KClass<#B>) // kotlinx.serialization.modules/subclass|subclass@kotlinx.serialization.modules.PolymorphicModuleBuilder<0:0>(kotlin.reflect.KClass<0:1>){0§<kotlin.Any>;1§<0:0>}[0]
final inline fun <#A: kotlin/Any, #B: reified #A> (kotlinx.serialization.modules/PolymorphicModuleBuilder<#A>).kotlinx.serialization.modules/subclass(kotlinx.serialization/KSerializer<#B>) // kotlinx.serialization.modules/subclass|subclass@kotlinx.serialization.modules.PolymorphicModuleBuilder<0:0>(kotlinx.serialization.KSerializer<0:1>){0§<kotlin.Any>;1§<0:0>}[0]
final inline fun <#A: kotlin/Any> (kotlinx.serialization.modules/SerializersModuleBuilder).kotlinx.serialization.modules/polymorphic(kotlin.reflect/KClass<#A>, kotlinx.serialization/KSerializer<#A>? = ..., kotlin/Function1<kotlinx.serialization.modules/PolymorphicModuleBuilder<#A>, kotlin/Unit> = ...) // kotlinx.serialization.modules/polymorphic|polymorphic@kotlinx.serialization.modules.SerializersModuleBuilder(kotlin.reflect.KClass<0:0>;kotlinx.serialization.KSerializer<0:0>?;kotlin.Function1<kotlinx.serialization.modules.PolymorphicModuleBuilder<0:0>,kotlin.Unit>){0§<kotlin.Any>}[0]
final inline fun <#A: kotlin/Any?> (kotlinx.serialization.encoding/Decoder).kotlinx.serialization.encoding/decodeStructure(kotlinx.serialization.descriptors/SerialDescriptor, crossinline kotlin/Function1<kotlinx.serialization.encoding/CompositeDecoder, #A>): #A // kotlinx.serialization.encoding/decodeStructure|decodeStructure@kotlinx.serialization.encoding.Decoder(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.Function1<kotlinx.serialization.encoding.CompositeDecoder,0:0>){0§<kotlin.Any?>}[0]
final inline fun <#A: kotlin/Any?> (kotlinx.serialization.encoding/Encoder).kotlinx.serialization.encoding/encodeCollection(kotlinx.serialization.descriptors/SerialDescriptor, kotlin.collections/Collection<#A>, crossinline kotlin/Function3<kotlinx.serialization.encoding/CompositeEncoder, kotlin/Int, #A, kotlin/Unit>) // kotlinx.serialization.encoding/encodeCollection|encodeCollection@kotlinx.serialization.encoding.Encoder(kotlinx.serialization.descriptors.SerialDescriptor;kotlin.collections.Collection<0:0>;kotlin.Function3<kotlinx.serialization.encoding.CompositeEncoder,kotlin.Int,0:0,kotlin.Unit>){0§<kotlin.Any?>}[0]
final inline fun <#A: kotlin/Any?> (kotlinx.serialization/DeserializationStrategy<*>).kotlinx.serialization.internal/cast(): kotlinx.serialization/DeserializationStrategy<#A> // kotlinx.serialization.internal/cast|cast@kotlinx.serialization.DeserializationStrategy<*>(){0§<kotlin.Any?>}[0]
final inline fun <#A: kotlin/Any?> (kotlinx.serialization/KSerializer<*>).kotlinx.serialization.internal/cast(): kotlinx.serialization/KSerializer<#A> // kotlinx.serialization.internal/cast|cast@kotlinx.serialization.KSerializer<*>(){0§<kotlin.Any?>}[0]
final inline fun <#A: kotlin/Any?> (kotlinx.serialization/SerializationStrategy<*>).kotlinx.serialization.internal/cast(): kotlinx.serialization/SerializationStrategy<#A> // kotlinx.serialization.internal/cast|cast@kotlinx.serialization.SerializationStrategy<*>(){0§<kotlin.Any?>}[0]
final inline fun <#A: reified kotlin/Any, #B: reified #A?> kotlinx.serialization.builtins/ArraySerializer(kotlinx.serialization/KSerializer<#B>): kotlinx.serialization/KSerializer<kotlin/Array<#B>> // kotlinx.serialization.builtins/ArraySerializer|ArraySerializer(kotlinx.serialization.KSerializer<0:1>){0§<kotlin.Any>;1§<0:0?>}[0]
final inline fun <#A: reified kotlin/Any> (kotlinx.serialization.modules/SerializersModuleBuilder).kotlinx.serialization.modules/contextual(kotlinx.serialization/KSerializer<#A>) // kotlinx.serialization.modules/contextual|contextual@kotlinx.serialization.modules.SerializersModuleBuilder(kotlinx.serialization.KSerializer<0:0>){0§<kotlin.Any>}[0]
final inline fun <#A: reified kotlin/Any> kotlinx.serialization.modules/serializersModuleOf(kotlinx.serialization/KSerializer<#A>): kotlinx.serialization.modules/SerializersModule // kotlinx.serialization.modules/serializersModuleOf|serializersModuleOf(kotlinx.serialization.KSerializer<0:0>){0§<kotlin.Any>}[0]
final inline fun <#A: reified kotlin/Any?, #B: reified kotlin/Any?> kotlinx.serialization.descriptors/mapSerialDescriptor(): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization.descriptors/mapSerialDescriptor|mapSerialDescriptor(){0§<kotlin.Any?>;1§<kotlin.Any?>}[0]
final inline fun <#A: reified kotlin/Any?> (kotlinx.serialization.descriptors/ClassSerialDescriptorBuilder).kotlinx.serialization.descriptors/element(kotlin/String, kotlin.collections/List<kotlin/Annotation> = ..., kotlin/Boolean = ...) // kotlinx.serialization.descriptors/element|element@kotlinx.serialization.descriptors.ClassSerialDescriptorBuilder(kotlin.String;kotlin.collections.List<kotlin.Annotation>;kotlin.Boolean){0§<kotlin.Any?>}[0]
final inline fun <#A: reified kotlin/Any?> (kotlinx.serialization.modules/SerializersModule).kotlinx.serialization/serializer(): kotlinx.serialization/KSerializer<#A> // kotlinx.serialization/serializer|serializer@kotlinx.serialization.modules.SerializersModule(){0§<kotlin.Any?>}[0]
final inline fun <#A: reified kotlin/Any?> (kotlinx.serialization/BinaryFormat).kotlinx.serialization/decodeFromByteArray(kotlin/ByteArray): #A // kotlinx.serialization/decodeFromByteArray|decodeFromByteArray@kotlinx.serialization.BinaryFormat(kotlin.ByteArray){0§<kotlin.Any?>}[0]
final inline fun <#A: reified kotlin/Any?> (kotlinx.serialization/BinaryFormat).kotlinx.serialization/decodeFromHexString(kotlin/String): #A // kotlinx.serialization/decodeFromHexString|decodeFromHexString@kotlinx.serialization.BinaryFormat(kotlin.String){0§<kotlin.Any?>}[0]
final inline fun <#A: reified kotlin/Any?> (kotlinx.serialization/BinaryFormat).kotlinx.serialization/encodeToByteArray(#A): kotlin/ByteArray // kotlinx.serialization/encodeToByteArray|encodeToByteArray@kotlinx.serialization.BinaryFormat(0:0){0§<kotlin.Any?>}[0]
final inline fun <#A: reified kotlin/Any?> (kotlinx.serialization/BinaryFormat).kotlinx.serialization/encodeToHexString(#A): kotlin/String // kotlinx.serialization/encodeToHexString|encodeToHexString@kotlinx.serialization.BinaryFormat(0:0){0§<kotlin.Any?>}[0]
final inline fun <#A: reified kotlin/Any?> (kotlinx.serialization/StringFormat).kotlinx.serialization/decodeFromString(kotlin/String): #A // kotlinx.serialization/decodeFromString|decodeFromString@kotlinx.serialization.StringFormat(kotlin.String){0§<kotlin.Any?>}[0]
final inline fun <#A: reified kotlin/Any?> (kotlinx.serialization/StringFormat).kotlinx.serialization/encodeToString(#A): kotlin/String // kotlinx.serialization/encodeToString|encodeToString@kotlinx.serialization.StringFormat(0:0){0§<kotlin.Any?>}[0]
final inline fun <#A: reified kotlin/Any?> kotlinx.serialization.descriptors/listSerialDescriptor(): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization.descriptors/listSerialDescriptor|listSerialDescriptor(){0§<kotlin.Any?>}[0]
final inline fun <#A: reified kotlin/Any?> kotlinx.serialization.descriptors/serialDescriptor(): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization.descriptors/serialDescriptor|serialDescriptor(){0§<kotlin.Any?>}[0]
final inline fun <#A: reified kotlin/Any?> kotlinx.serialization.descriptors/setSerialDescriptor(): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization.descriptors/setSerialDescriptor|setSerialDescriptor(){0§<kotlin.Any?>}[0]
final inline fun <#A: reified kotlin/Any?> kotlinx.serialization/serializer(): kotlinx.serialization/KSerializer<#A> // kotlinx.serialization/serializer|serializer(){0§<kotlin.Any?>}[0]
final inline fun kotlinx.serialization.modules/SerializersModule(kotlin/Function1<kotlinx.serialization.modules/SerializersModuleBuilder, kotlin/Unit>): kotlinx.serialization.modules/SerializersModule // kotlinx.serialization.modules/SerializersModule|SerializersModule(kotlin.Function1<kotlinx.serialization.modules.SerializersModuleBuilder,kotlin.Unit>){}[0]

// Targets: [native, wasmJs, wasmWasi]
final class <#A: kotlin/Any?, #B: kotlin/Any?> kotlinx.serialization.internal/LinkedHashMapSerializer : kotlinx.serialization.internal/MapLikeSerializer<#A, #B, kotlin.collections/Map<#A, #B>, kotlin.collections/HashMap<#A, #B>> { // kotlinx.serialization.internal/LinkedHashMapSerializer|null[0]
    constructor <init>(kotlinx.serialization/KSerializer<#A>, kotlinx.serialization/KSerializer<#B>) // kotlinx.serialization.internal/LinkedHashMapSerializer.<init>|<init>(kotlinx.serialization.KSerializer<1:0>;kotlinx.serialization.KSerializer<1:1>){}[0]

    final val descriptor // kotlinx.serialization.internal/LinkedHashMapSerializer.descriptor|{}descriptor[0]
        final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization.internal/LinkedHashMapSerializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
}

// Targets: [native, wasmJs, wasmWasi]
final class <#A: kotlin/Any?> kotlinx.serialization.internal/LinkedHashSetSerializer : kotlinx.serialization.internal/CollectionSerializer<#A, kotlin.collections/Set<#A>, kotlin.collections/HashSet<#A>> { // kotlinx.serialization.internal/LinkedHashSetSerializer|null[0]
    constructor <init>(kotlinx.serialization/KSerializer<#A>) // kotlinx.serialization.internal/LinkedHashSetSerializer.<init>|<init>(kotlinx.serialization.KSerializer<1:0>){}[0]

    final val descriptor // kotlinx.serialization.internal/LinkedHashSetSerializer.descriptor|{}descriptor[0]
        final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization.internal/LinkedHashSetSerializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
}

// Targets: [js]
final class <#A: kotlin/Any?, #B: kotlin/Any?> kotlinx.serialization.internal/LinkedHashMapSerializer : kotlinx.serialization.internal/MapLikeSerializer<#A, #B, kotlin.collections/Map<#A, #B>, kotlin.collections/LinkedHashMap<#A, #B>> { // kotlinx.serialization.internal/LinkedHashMapSerializer|null[0]
    constructor <init>(kotlinx.serialization/KSerializer<#A>, kotlinx.serialization/KSerializer<#B>) // kotlinx.serialization.internal/LinkedHashMapSerializer.<init>|<init>(kotlinx.serialization.KSerializer<1:0>;kotlinx.serialization.KSerializer<1:1>){}[0]

    final val descriptor // kotlinx.serialization.internal/LinkedHashMapSerializer.descriptor|{}descriptor[0]
        final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization.internal/LinkedHashMapSerializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
}

// Targets: [js]
final class <#A: kotlin/Any?> kotlinx.serialization.internal/LinkedHashSetSerializer : kotlinx.serialization.internal/CollectionSerializer<#A, kotlin.collections/Set<#A>, kotlin.collections/LinkedHashSet<#A>> { // kotlinx.serialization.internal/LinkedHashSetSerializer|null[0]
    constructor <init>(kotlinx.serialization/KSerializer<#A>) // kotlinx.serialization.internal/LinkedHashSetSerializer.<init>|<init>(kotlinx.serialization.KSerializer<1:0>){}[0]

    final val descriptor // kotlinx.serialization.internal/LinkedHashSetSerializer.descriptor|{}descriptor[0]
        final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // kotlinx.serialization.internal/LinkedHashSetSerializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
}
