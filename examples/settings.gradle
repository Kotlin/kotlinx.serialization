pluginManagement {
    resolutionStrategy {
        eachPlugin {
            if (requested.id.id == "kotlin-multiplatform") {
                useModule("org.jetbrains.kotlin:kotlin-gradle-plugin:$mainKotlinVersion")
            }
            if (requested.id.id == "org.jetbrains.kotlin.jvm") {
                useModule("org.jetbrains.kotlin:kotlin-gradle-plugin:$mainKotlinVersion")
            }
            if (requested.id.id == "kotlinx-serialization") {
                useModule("org.jetbrains.kotlin:kotlin-serialization:$mainKotlinVersion")
            }
        }
    }

    repositories {
        mavenCentral()
        jcenter()
        maven { url 'https://dl.bintray.com/kotlin/kotlin-dev' }
        maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
        maven { url 'https://plugins.gradle.org/m2/' }
    }
}

rootProject.name = 'kotlinx-serialization-examples'

include ':example-visitors'
include ':example-jvm'
include ':example-js'
include ':example-native'
include ':example-multiplatform'

enableFeaturePreview('GRADLE_METADATA')


// Uncomment this to include build of the runtime library itself
// https://docs.gradle.org/current/userguide/composite_builds.html#included_build_declaring_substitutions

//includeBuild("../") {
//    dependencySubstitution {
//        substitute(module("org.jetbrains.kotlinx:kotlinx-serialization-runtime")).with(project(":jvm"))
//        substitute(module("org.jetbrains.kotlinx:kotlinx-serialization-runtime-common")).with(project(":common"))
//        substitute(module("org.jetbrains.kotlinx:kotlinx-serialization-runtime-js")).with(project(":js"))
//    }
//}
