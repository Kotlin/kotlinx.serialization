/*
 * Copyright 2017-2019 JetBrains s.r.o. Use of this source code is governed by the Apache 2.0 license.
 */


apply plugin: 'kotlin-platform-native'
apply plugin: 'kotlinx-serialization-native'

def deployMode = property('native.deploy') == 'true'

sourceSets {
    main {
        kotlin.srcDirs = ['src/main/kotlin', '../common/src/main/kotlin', '../../json/common/src']

        component {

            baseName = "kotlinx-serialization-runtime-native"

            // todo: fixme, k/n!
            publishJavadoc = false
            publishSources = false

            outputKinds = [KLIBRARY]
            if (!deployMode)
                target 'host'
            else
                targets = [ 'ios_arm64', 'ios_arm32', 'ios_x64', 'macos_x64', 'linux_x64', 'mingw_x64' ]

            extraOpts experimentalsEnabled
        }
    }

    test {
        kotlin.srcDirs = ['src/test/kotlin', '../common/src/testWithNative']

        component {
            // experimantalsInTest is missing intentionally since
            // @ImplicitReflectionSerializer does not work on Native at all
            extraOpts experimentalsEnabled + ["-Xuse-experimental=kotlinx.serialization.UnstableDefault"]
        }
    }
}


dependencies {
//    expectedBy project(':common')
//    expectedBy project(':jsonparser')
}

apply plugin: 'maven-publish'

def localMavenRepo = "file://${new File(System.properties['user.home'] as String)}/.m2-kotlin-native"
publishing {
    repositories {
        maven {
            url = localMavenRepo
        }
    }
}

apply plugin: 'com.jfrog.bintray'

apply from: "${rootProject.rootDir}/gradle/bintray.gradle"

bintrayUpload.doFirst {
    publications = project.publishing.publications
}
